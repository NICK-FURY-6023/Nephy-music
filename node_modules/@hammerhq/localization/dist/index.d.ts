interface I18nOptions {
    directory?: string;
    defaultLocale: string;
}
interface I18nToJSON {
    constants?: I18nConstants;
    [key: string]: unknown;
}
type I18nConstants = {
    [param: string]: string;
};
type I18nArgs = {
    [param: string]: string;
};
type I18nString = {
    [param: string]: string;
};
type I18nFile = Map<string, I18nString>;
declare class I18n {
    private locales;
    private directory;
    private defaultLocale;
    private constants?;
    constructor(options: I18nOptions);
    private resolveString;
    private replace;
    getLocales: () => string[];
    getConstant: (constant: string) => string | undefined;
    toJSON(args?: I18nArgs): I18nToJSON;
    get(locale: string, section: string, key: string, args?: I18nArgs): string;
}

export { I18n, type I18nArgs, type I18nConstants, type I18nFile, type I18nOptions, type I18nString, type I18nToJSON };
