{"version":3,"sources":["../package.json","../src/metadata.ts","../src/Library/AbstractLibrary.ts","../src/Library/DiscordJS.ts","../src/Library/ErisJS.ts","../src/Library/OceanicJS.ts","../src/Library/Seyfert.ts","../src/Library/index.ts","../src/Interface/Manager.ts","../src/Rainlink.ts","../src/Interface/Constants.ts","../src/Player/RainlinkTrack.ts","../src/Player/RainlinkQueue.ts","../src/Utilities/RainlinkDatabase.ts","../src/Player/RainlinkFilter.ts","../src/Utilities/RainlinkFunctions.ts","../src/Player/RainlinkPlayer.ts","../src/Player/RainlinkVoice.ts","../src/Manager/RainlinkPlayerManager.ts","../src/Node/RainlinkRest.ts","../src/Node/RainlinkNode.ts","../src/Node/RainlinkPlayerEvents.ts","../src/Drivers/AbstractDriver.ts","../src/Drivers/Lavalink4.ts","../src/Utilities/RainlinkWebsocket.ts","../src/Utilities/AbstractDecoder.ts","../src/Utilities/LavalinkDecoder.ts","../src/Manager/RainlinkNodeManager.ts","../src/Drivers/Lavalink3.ts","../src/Drivers/Nodelink2.ts","../src/Drivers/FrequenC.ts","../src/Plugin/RainlinkPlugin.ts","../src/Plugin/SourceRainlinkPlugin.ts","../src/index.ts"],"sourcesContent":["{\n  \"name\": \"rainlink\",\n  \"version\": \"1.2.2\",\n  \"description\": \"Another lavalink wrapper but focus on stability and rich features\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/RainyXeon/Rainlink.git\"\n  },\n  \"scripts\": {\n    \"build\": \"npx tsup-node\",\n    \"prettier\": \"npx prettier -w ./src\",\n    \"build:doc\": \"typedoc --options ./typedoc.json --sort kind\",\n    \"build:full\": \"npm run prettier && npm run build:eslint && npm run build && npm run build:doc\",\n    \"build:eslint\": \"npx eslint ./src --fix\"\n  },\n  \"main\": \"dist/index.js\",\n  \"module\": \"dist/index.mjs\",\n  \"types\": \"dist/index.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/index.d.ts\",\n      \"import\": \"./dist/index.mjs\",\n      \"require\": \"./dist/index.js\"\n    }\n  },\n  \"keywords\": [\n    \"bot\",\n    \"music\",\n    \"lavalink.js\",\n    \"lavalink-api\",\n    \"discord.js\",\n    \"eris.js\",\n    \"oceanic.js\",\n    \"lavalink\",\n    \"wrapper\",\n    \"lavalink-wrapper\",\n    \"rainlink\"\n  ],\n  \"author\": \"RainyXeon\",\n  \"license\": \"GPL-3.0\",\n  \"devDependencies\": {\n    \"@eslint/eslintrc\": \"^3.1.0\",\n    \"@eslint/js\": \"^9.10.0\",\n    \"@types/bun\": \"^1.1.9\",\n    \"@types/node\": \"^22.5.4\",\n    \"@types/node-fetch\": \"^2.6.11\",\n    \"@typescript-eslint/eslint-plugin\": \"^8.5.0\",\n    \"@typescript-eslint/parser\": \"^8.5.0\",\n    \"discord.js\": \"^14.14.1\",\n    \"dokdo\": \"^1.0.1\",\n    \"dotenv\": \"^16.4.5\",\n    \"eslint\": \"^9.10.0\",\n    \"globals\": \"^15.9.0\",\n    \"prettier\": \"^3.2.5\",\n    \"tsup\": \"^8.3.0\",\n    \"typedoc\": \"^0.26.7\",\n    \"typescript\": \"^5.6.2\"\n  },\n  \"tsup\": {\n    \"dts\": true,\n    \"entry\": [\n      \"./src/index.ts\"\n    ],\n    \"splitting\": false,\n    \"sourcemap\": true,\n    \"clean\": true,\n    \"format\": [\n      \"cjs\",\n      \"esm\"\n    ]\n  },\n  \"prettier\": {\n    \"trailingComma\": \"es5\",\n    \"tabWidth\": 2,\n    \"semi\": false,\n    \"singleQuote\": true,\n    \"printWidth\": 100\n  }\n}\n","// eslint-disable-next-line @typescript-eslint/no-require-imports\nconst packages = require('../package.json')\n\n/** @ignore */\nexport const metadata = {\n\tname: 'rainlink',\n\tversion: packages ? packages : '1.0.0',\n\tgithub: 'https://github.com/RainyXeon/Rainlink',\n}\n","// Get from: https://github.com/shipgirlproject/Shoukaku/blob/396aa531096eda327ade0f473f9807576e9ae9df/src/connectors/Connector.ts\n// Special thanks to shipgirlproject team!\n\nimport { RainlinkNodeOptions } from '../Interface/Manager'\nimport { Rainlink } from '../Rainlink'\nexport const AllowedPackets = ['VOICE_STATE_UPDATE', 'VOICE_SERVER_UPDATE']\n\n/**\n * The abstract class for developing library\n */\nexport abstract class AbstractLibrary {\n\tprotected readonly client: any\n\tprotected manager: Rainlink | null\n\tconstructor(client: any) {\n\t\tthis.client = client\n\t\tthis.manager = null\n\t}\n\n\tprotected ready(nodes: RainlinkNodeOptions[]): void {\n    this.manager!.id = this.getId()\n    this.manager!.shardCount = this.getShardCount()\n    this.manager!.emit(\n    \t'debug',\n    \t`[Rainlink] | Finished the initialization process | Registered ${this.manager!.plugins.size} plugins | Now connect all current nodes`\n    )\n    for (const node of nodes) this.manager?.nodes.add(node)\n\t}\n\n\t/** @ignore */\n\tpublic set(manager: Rainlink): AbstractLibrary {\n\t\tthis.manager = manager\n\t\treturn this\n\t}\n\n  /**\n   * A getter where the lib stores the client user (the one logged in as a bot) id\n   * @returns string\n   */\n  abstract getId(): string\n\n  /**\n   * For dealing ws with lavalink server\n   * @returns number\n   */\n  abstract getShardCount(): number\n\n  /**\n   * Where your library send packets to Discord Gateway\n   * @param shardId The current shard Id\n   * @param payload The payload data to request with discord gateway\n   * @param important If this payload important or not\n   */\n  abstract sendPacket(shardId: number, payload: any, important: boolean): void\n\n  /**\n   * Listen attaches the event listener to the library you are using\n   * @param nodes All current nodes in the array\n   */\n  abstract listen(nodes: RainlinkNodeOptions[]): void\n\n  protected raw(packet: any): void {\n  \tif (!AllowedPackets.includes(packet.t)) return\n  \tconst guildId = packet.d.guild_id\n  \tconst voice = this.manager!.voices.get(guildId)\n  \tif (!voice) return\n  \tif (packet.t === 'VOICE_SERVER_UPDATE') return voice.setServerUpdate(packet.d)\n  \tconst userId = packet.d.user_id\n  \tif (userId !== this.manager!.id) return\n  \tvoice.setStateUpdate(packet.d)\n  }\n}\n","// Modded from: https://github.com/shipgirlproject/Shoukaku/blob/396aa531096eda327ade0f473f9807576e9ae9df/src/connectors/libs/DiscordJS.ts\n// Special thanks to shipgirlproject team!\n\nimport { AbstractLibrary } from './AbstractLibrary'\nimport { RainlinkNodeOptions } from '../Interface/Manager'\n\nexport class DiscordJS extends AbstractLibrary {\n\tpublic sendPacket(shardId: number, payload: any, important: boolean): void {\n\t\treturn this.client.ws.shards.get(shardId)?.send(payload, important)\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.client.user.id\n\t}\n\n\tpublic getShardCount(): number {\n\t\treturn this.client.shard && this.client.shard.count ? this.client.shard.count : 1\n\t}\n\n\tpublic listen(nodes: RainlinkNodeOptions[]): void {\n\t\tthis.client.once('ready', () => this.ready(nodes))\n\t\tthis.client.on('raw', (packet: any) => this.raw(packet))\n\t}\n}\n","import { AbstractLibrary } from './AbstractLibrary'\nimport { RainlinkNodeOptions } from '../Interface/Manager'\n\nexport class ErisJS extends AbstractLibrary {\n\tpublic sendPacket(shardId: number, payload: any, important: boolean): void {\n\t\treturn this.client.shards.get(shardId)?.sendWS(payload.op, payload.d, important)\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.client.user.id\n\t}\n\n\tpublic getShardCount(): number {\n\t\treturn this.client.shards && this.client.shards.size ? this.client.shards.size : 1\n\t}\n\n\tpublic listen(nodes: RainlinkNodeOptions[]): void {\n\t\tthis.client.once('ready', () => this.ready(nodes))\n\t\tthis.client.on('rawWS', (packet: any) => this.raw(packet))\n\t}\n}\n","import { AbstractLibrary } from './AbstractLibrary'\nimport { RainlinkNodeOptions } from '../Interface/Manager'\n\nexport class OceanicJS extends AbstractLibrary {\n\tpublic sendPacket(shardId: number, payload: any, important: boolean): void {\n\t\treturn this.client.shards.get(shardId)?.send(payload.op, payload.d, important)\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.client.user.id\n\t}\n\n\tpublic getShardCount(): number {\n\t\treturn this.client.shards && this.client.shards.size ? this.client.shards.size : 1\n\t}\n\n\tpublic listen(nodes: RainlinkNodeOptions[]): void {\n\t\tthis.client.once('ready', () => this.ready(nodes))\n\t\tthis.client.on('packet', (packet: any) => this.raw(packet))\n\t}\n}\n","import { AbstractLibrary } from './AbstractLibrary'\nimport { RainlinkNodeOptions } from '../Interface/Manager'\n\nexport class Seyfert extends AbstractLibrary {\n\tpublic sendPacket(shardId: number, payload: any): void {\n\t\treturn this.client.gateway.send(shardId, payload)\n\t}\n\tpublic getId(): string {\n\t\treturn this.client.botId\n\t}\n\n\tpublic getShardCount(): number {\n\t\treturn this.client.gateway.totalShards\n\t}\n\n\tpublic listen(nodes: RainlinkNodeOptions[]): void {\n\t\tthis.client.events.values.RAW = {\n\t\t\tdata: { name: 'raw' },\n\t\t\trun: (packet: any) => {\n\t\t\t\tif (packet.t === 'READY') return this.ready(nodes)\n\t\t\t\treturn this.raw(packet)\n\t\t\t},\n\t\t}\n\t}\n}\n","import { DiscordJS } from './DiscordJS'\nimport { ErisJS } from './ErisJS'\nimport { OceanicJS } from './OceanicJS'\nimport { Seyfert } from './Seyfert'\n\n/**\n * Import example:\n * @example\n * ```ts\n * new Plugin.DiscordJS(client)\n * new Plugin.ErisJS(client)\n * new Plugin.OceanicJS(client)\n * new Plugin.Seyfert(client)\n * ```\n */\nexport default {\n\tDiscordJS,\n\tErisJS,\n\tOceanicJS,\n\tSeyfert,\n}\n","import { AbstractLibrary } from '../Library/AbstractLibrary'\nimport { RainlinkPlugin } from '../Plugin/RainlinkPlugin'\nimport { RainlinkTrack } from '../Player/RainlinkTrack'\nimport { RainlinkNode } from '../Node/RainlinkNode'\nimport { RainlinkRest } from '../Node/RainlinkRest'\nimport { RainlinkPlayer } from '../Player/RainlinkPlayer'\nimport { AbstractDriver } from '../Drivers/AbstractDriver'\nimport { RainlinkQueue } from '../Player/RainlinkQueue'\nimport { RainlinkFilter } from '../Player/RainlinkFilter'\n\n/**\n * A structure interface\n */\nexport type Constructor<T> = new (...args: any[]) => T\n\n/**\n * The structures options interface for custom class/structures\n */\nexport interface Structures {\n  /**\n   * A custom structure that extends the RainlinkRest class\n   */\n  rest?: Constructor<RainlinkRest>\n  /**\n   * A custom structure that extends the RainlinkPlayer class\n   */\n  player?: Constructor<RainlinkPlayer>\n  /**\n   * A custom structure that extends the RainlinkQueue class\n   */\n  queue?: Constructor<RainlinkQueue>\n  /**\n   * A custom structure that extends the RainlinkQueue class\n   */\n  filter?: Constructor<RainlinkFilter>\n}\n\n/**\n * Rainlink node option interface\n */\nexport interface RainlinkNodeOptions {\n  /** Name for get the lavalink server info in rainlink */\n  name: string\n  /** The ip address or domain of lavalink server */\n  host: string\n  /** The port that lavalink server exposed */\n  port: number\n  /** The password of lavalink server */\n  auth: string\n  /** Whenever lavalink user ssl or not */\n  secure: boolean\n  /** The driver class for handling lavalink response */\n  driver?: string\n  /** Use legacy ws client (Require install [ws](https://www.npmjs.com/package/ws) package, If you use bun, do not enable this option) */\n  legacyWS?: boolean\n  /** The region of the node */\n  region?: string\n}\n\n/**\n * Some rainlink additional config option\n */\nexport interface RainlinkAdditionalOptions {\n  /** Additional custom driver for rainlink (no need 'new' keyword when add). Example: `additionalDriver: Lavalink4` */\n  additionalDriver?: Constructor<AbstractDriver>[]\n  /** Timeout before trying to reconnect (ms) */\n  retryTimeout?: number\n  /** Number of times to try and reconnect to Lavalink before giving up */\n  retryCount?: number\n  /** The retry timeout for voice manager when dealing connection to discord voice server (ms) */\n  voiceConnectionTimeout?: number\n  /** The default search engine like default search from youtube, spotify,... */\n  defaultSearchEngine?: string\n  /** The default volume when create a player */\n  defaultVolume?: number\n  /** Search track from youtube when track resolve failed */\n  searchFallback?: {\n    /** Whenever enable this search fallback or not */\n    enable: boolean\n    /** Choose a fallback search engine, recommended soundcloud and youtube */\n    engine: string\n  }\n  /** Whether to resume a connection on disconnect to Lavalink (Server Side) (Note: DOES NOT RESUME WHEN THE LAVALINK SERVER DIES) */\n  resume?: boolean\n  /** When the seasion is deleted from Lavalink. Use second (Server Side) (Note: DOES NOT RESUME WHEN THE LAVALINK SERVER DIES) */\n  resumeTimeout?: number\n  /** User Agent to use when making requests to Lavalink */\n  userAgent?: string\n  /** Node Resolver to use if you want to customize it */\n  nodeResolver?: (nodes: RainlinkNode[]) => Promise<RainlinkNode | undefined>\n  /** Custom structures for rainlink to use */\n  structures?: Structures\n}\n\n/**\n * Rainlink config interface\n */\nexport interface RainlinkOptions {\n  /** The lavalink server credentials array*/\n  nodes: RainlinkNodeOptions[]\n  /** The discord library for using voice manager, example: discordjs, erisjs. Check {@link Library} */\n  library: AbstractLibrary\n  /** The rainlink plugins array. Check {@link RainlinkPlugin} */\n  plugins?: RainlinkPlugin[]\n  /** Rainlink additional options  */\n  options?: RainlinkAdditionalOptions\n}\n\n/**\n * The type enum of rainlink search function result\n */\nexport enum RainlinkSearchResultType {\n  TRACK = 'TRACK',\n  PLAYLIST = 'PLAYLIST',\n  SEARCH = 'SEARCH',\n}\n\n/**\n * The rainlink search function result interface\n */\nexport interface RainlinkSearchResult {\n  type: RainlinkSearchResultType\n  playlistName?: string\n  tracks: RainlinkTrack[]\n}\n\n/**\n * The rainlink search function options interface\n */\nexport interface RainlinkSearchOptions {\n  /** User info of who request the song */\n  requester?: unknown\n  /** Which node do user want to use (get using node name) */\n  nodeName?: string\n  /** Which search engine do user want to use (get using search engine name) */\n  engine?: string\n}\n","import {\n\tRainlinkAdditionalOptions,\n\tRainlinkOptions,\n\tRainlinkSearchOptions,\n\tRainlinkSearchResult,\n\tRainlinkSearchResultType,\n\tConstructor,\n} from './Interface/Manager'\nimport { EventEmitter } from 'node:events'\nimport { AbstractLibrary } from './Library/AbstractLibrary'\nimport { VoiceChannelOptions } from './Interface/Player'\nimport { RainlinkPlayerManager } from './Manager/RainlinkPlayerManager'\nimport { RainlinkNodeManager } from './Manager/RainlinkNodeManager'\nimport {\n\tLavalinkLoadType,\n\tRainlinkEvents,\n\tRainlinkPluginType,\n\tSourceIDs,\n} from './Interface/Constants'\nimport { RainlinkTrack } from './Player/RainlinkTrack'\nimport { RawTrack } from './Interface/Rest'\nimport { RainlinkPlayer } from './Player/RainlinkPlayer'\nimport { SourceRainlinkPlugin } from './Plugin/SourceRainlinkPlugin'\nimport { metadata } from './metadata'\nimport { RainlinkPlugin } from './Plugin/RainlinkPlugin'\nimport { AbstractDriver } from './Drivers/AbstractDriver'\nimport { Lavalink3 } from './Drivers/Lavalink3'\nimport { Nodelink2 } from './Drivers/Nodelink2'\nimport { Lavalink4 } from './Drivers/Lavalink4'\nimport { RainlinkDatabase } from './Utilities/RainlinkDatabase'\nimport { FrequenC } from './Drivers/FrequenC'\nimport { RainlinkEventsInterface } from './Interface/Events'\nimport { RainlinkVoice } from './Player/RainlinkVoice'\n\n/** The heart of Rainlink. Manage all package action */\nexport class Rainlink extends EventEmitter {\n\t/**\n   * Discord library connector\n   */\n\tpublic readonly library: AbstractLibrary\n\t/**\n   * Lavalink server that has been configured\n   */\n\tpublic nodes: RainlinkNodeManager\n\t/**\n   * Rainlink options\n   */\n\tpublic rainlinkOptions: RainlinkOptions\n\t/**\n   * Bot id\n   */\n\tpublic id: string | undefined\n\t/**\n   * Player maps\n   */\n\tpublic players: RainlinkPlayerManager\n\t/**\n   * All search engine\n   */\n\tpublic searchEngines: RainlinkDatabase<string>\n\t/**\n   * All search plugins (resolver plugins)\n   */\n\tpublic searchPlugins: RainlinkDatabase<SourceRainlinkPlugin>\n\t/**\n   * All plugins (include resolver plugins)\n   */\n\tpublic plugins: RainlinkDatabase<RainlinkPlugin>\n\t/**\n   * The rainlink manager\n   */\n\tpublic drivers: Constructor<AbstractDriver>[]\n\t/**\n   * The current bott's shard count\n   */\n\tpublic shardCount: number = 1\n\t/**\n   * All voice handler currently\n   */\n\tpublic voices: RainlinkDatabase<RainlinkVoice>\n\n\t/**\n   * The main class that handle all works in lavalink server.\n   * Call this class by using new Rainlink(your_params) to use!\n   * @param options The main ranlink options\n   */\n\tconstructor(options: RainlinkOptions) {\n\t\tsuper()\n\t\tif (!options.library)\n\t\t\tthrow new Error(\n\t\t\t\t'Please set an new lib to connect, example: \\nlibrary: new Library.DiscordJS(client) '\n\t\t\t)\n\t\tthis.library = options.library.set(this)\n\t\tthis.drivers = [Lavalink3, Nodelink2, Lavalink4, FrequenC]\n\t\tthis.rainlinkOptions = options\n\t\tthis.rainlinkOptions.options = this.mergeDefault<RainlinkAdditionalOptions>(\n\t\t\tthis.defaultOptions,\n\t\t\tthis.rainlinkOptions.options ?? {}\n\t\t)\n\t\tif (\n\t\t\tthis.rainlinkOptions.options.additionalDriver &&\n      this.rainlinkOptions.options.additionalDriver?.length !== 0\n\t\t)\n\t\t\tthis.drivers.push(...this.rainlinkOptions.options.additionalDriver)\n\t\tthis.nodes = new RainlinkNodeManager(this)\n\t\tthis.players = new RainlinkPlayerManager(this)\n\t\tthis.voices = new RainlinkDatabase<RainlinkVoice>()\n\t\tthis.searchEngines = new RainlinkDatabase<string>()\n\t\tthis.searchPlugins = new RainlinkDatabase<SourceRainlinkPlugin>()\n\t\tthis.plugins = new RainlinkDatabase<RainlinkPlugin>()\n\t\tthis.initialSearchEngines()\n\t\tif (\n\t\t\t!this.rainlinkOptions.options.defaultSearchEngine ||\n      this.rainlinkOptions.options.defaultSearchEngine.length == 0\n\t\t)\n\t\t\tthis.rainlinkOptions.options.defaultSearchEngine == 'youtube'\n\n\t\tif (this.rainlinkOptions.plugins) {\n\t\t\tfor (const [, plugin] of this.rainlinkOptions.plugins.entries()) {\n\t\t\t\tif (!plugin.isRainlinkPlugin)\n\t\t\t\t\tthrow new Error('Plugin must be an instance of RainlinkPlugin or SourceRainlinkPlugin')\n\t\t\t\tplugin.load(this)\n\n\t\t\t\tthis.plugins.set(plugin.name(), plugin)\n\n\t\t\t\tif (plugin.type() == RainlinkPluginType.SourceResolver) {\n\t\t\t\t\tconst newPlugin = plugin as SourceRainlinkPlugin\n\t\t\t\t\tconst sourceName = newPlugin.sourceName()\n\t\t\t\t\tconst sourceIdentify = newPlugin.sourceIdentify()\n\t\t\t\t\tthis.searchEngines.set(sourceName, sourceIdentify)\n\t\t\t\t\tthis.searchPlugins.set(sourceName, newPlugin)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.library.listen(this.rainlinkOptions.nodes)\n\t}\n\n\tprotected initialSearchEngines() {\n\t\tfor (const data of SourceIDs) {\n\t\t\tthis.searchEngines.set(data.name, data.id)\n\t\t}\n\t}\n\n\t/**\n   * Create a new player.\n   * @returns RainlinkNode\n   */\n\tasync create(options: VoiceChannelOptions): Promise<RainlinkPlayer> {\n\t\treturn await this.players.create(options)\n\t}\n\n\t/**\n   * Destroy a specific player.\n   * @returns void\n   */\n\tasync destroy(guildId: string): Promise<void> {\n\t\tthis.players.destroy(guildId)\n\t}\n\n\t/**\n   * Search a specific track.\n   * @returns RainlinkSearchResult\n   */\n\tasync search(query: string, options?: RainlinkSearchOptions): Promise<RainlinkSearchResult> {\n\t\tconst node =\n      options && options?.nodeName\n      \t? (this.nodes.get(options.nodeName) ?? (await this.nodes.getLeastUsed()))\n      \t: await this.nodes.getLeastUsed()\n\n\t\tif (!node) throw new Error('No node is available')\n\n\t\tlet pluginData: RainlinkSearchResult\n\n\t\tconst directSearchRegex = /directSearch=(.*)/\n\t\tconst isDirectSearch = directSearchRegex.exec(query)\n\t\tconst isUrl = /^https?:\\/\\/.*/.test(query)\n\n\t\tconst pluginSearch = this.searchPlugins.get(String(options?.engine))\n\n\t\tif (\n\t\t\toptions &&\n      options!.engine &&\n      options!.engine !== null &&\n      pluginSearch &&\n      isDirectSearch == null\n\t\t) {\n\t\t\tpluginData = await pluginSearch.searchDirect(query, options)\n\t\t\tif (pluginData.tracks.length !== 0) return pluginData\n\t\t}\n\n\t\tconst source =\n      options && options?.engine\n      \t? this.searchEngines.get(options.engine)\n      \t: this.searchEngines.get(\n            this.rainlinkOptions.options!.defaultSearchEngine\n            \t? this.rainlinkOptions.options!.defaultSearchEngine\n            \t: 'youtube'\n      \t)\n\n\t\tconst finalQuery =\n      isDirectSearch !== null ? isDirectSearch[1] : !isUrl ? `${source}search:${query}` : query\n\n\t\tconst result = await node.rest.resolver(finalQuery).catch(() => null)\n\t\tif (!result || result.loadType === LavalinkLoadType.EMPTY) {\n\t\t\treturn this.buildSearch(undefined, [], RainlinkSearchResultType.SEARCH)\n\t\t}\n\n\t\tlet loadType: RainlinkSearchResultType\n\t\tlet normalizedData: {\n      playlistName?: string\n      tracks: RawTrack[]\n    } = { tracks: [] }\n\t\tswitch (result.loadType) {\n\t\tcase LavalinkLoadType.TRACK: {\n\t\t\tloadType = RainlinkSearchResultType.TRACK\n\t\t\tnormalizedData.tracks = [result.data]\n\t\t\tbreak\n\t\t}\n\n\t\tcase LavalinkLoadType.PLAYLIST: {\n\t\t\tloadType = RainlinkSearchResultType.PLAYLIST\n\t\t\tnormalizedData = {\n\t\t\t\tplaylistName: result.data.info.name,\n\t\t\t\ttracks: result.data.tracks,\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\n\t\tcase LavalinkLoadType.SEARCH: {\n\t\t\tloadType = RainlinkSearchResultType.SEARCH\n\t\t\tnormalizedData.tracks = result.data\n\t\t\tbreak\n\t\t}\n\n\t\tdefault: {\n\t\t\tloadType = RainlinkSearchResultType.SEARCH\n\t\t\tnormalizedData.tracks = []\n\t\t\tbreak\n\t\t}\n\t\t}\n\n\t\tthis.emit(\n\t\t\tRainlinkEvents.Debug,\n\t\t\t`[Rainlink] / [Search] | Searched ${query}; Track results: ${normalizedData.tracks.length}`\n\t\t)\n\n\t\treturn this.buildSearch(\n\t\t\tnormalizedData.playlistName ?? undefined,\n\t\t\tnormalizedData.tracks.map(\n\t\t\t\t(track) =>\n\t\t\t\t\tnew RainlinkTrack(\n\t\t\t\t\t\ttrack,\n\t\t\t\t\t\toptions && options.requester ? options.requester : undefined,\n\t\t\t\t\t\tnode.driver.id\n\t\t\t\t\t)\n\t\t\t),\n\t\t\tloadType\n\t\t)\n\t}\n\n\tprotected buildSearch(\n\t\tplaylistName?: string,\n\t\ttracks: RainlinkTrack[] = [],\n\t\ttype?: RainlinkSearchResultType\n\t): RainlinkSearchResult {\n\t\treturn {\n\t\t\tplaylistName,\n\t\t\ttracks,\n\t\t\ttype: type ?? RainlinkSearchResultType.SEARCH,\n\t\t}\n\t}\n\n\tprotected get defaultOptions(): RainlinkAdditionalOptions {\n\t\treturn {\n\t\t\tadditionalDriver: [],\n\t\t\tretryTimeout: 3000,\n\t\t\tretryCount: 15,\n\t\t\tvoiceConnectionTimeout: 15000,\n\t\t\tdefaultSearchEngine: 'youtube',\n\t\t\tdefaultVolume: 100,\n\t\t\tsearchFallback: {\n\t\t\t\tenable: true,\n\t\t\t\tengine: 'soundcloud',\n\t\t\t},\n\t\t\tresume: false,\n\t\t\tuserAgent: `Discord/Bot/${metadata.name}/${metadata.version} (${metadata.github})`,\n\t\t\tnodeResolver: undefined,\n\t\t\tstructures: {\n\t\t\t\tplayer: undefined,\n\t\t\t\trest: undefined,\n\t\t\t\tqueue: undefined,\n\t\t\t\tfilter: undefined,\n\t\t\t},\n\t\t\tresumeTimeout: 300,\n\t\t}\n\t}\n\n\t// Modded from:\n\t// https://github.com/shipgirlproject/Shoukaku/blob/2677ecdf123ffef1c254c2113c5342b250ac4396/src/Utils.ts#L9-L23\n\tprotected mergeDefault<T extends { [key: string]: any }>(def: T, given: T): Required<T> {\n\t\tif (!given) return def as Required<T>\n\t\tconst defaultKeys: (keyof T)[] = Object.keys(def)\n\t\tfor (const key in given) {\n\t\t\tif (defaultKeys.includes(key)) continue\n\t\t\tif (this.isNumber(key)) continue\n\t\t\tdelete given[key]\n\t\t}\n\t\tfor (const key of defaultKeys) {\n\t\t\tif (Array.isArray(given[key]) && given[key] !== null && given[key] !== undefined) {\n\t\t\t\tif (given[key].length == 0) given[key] = def[key]\n\t\t\t}\n\t\t\tif (def[key] === null || (typeof def[key] === 'string' && def[key].length === 0)) {\n\t\t\t\tif (!given[key]) given[key] = def[key]\n\t\t\t}\n\t\t\tif (given[key] === null || given[key] === undefined) given[key] = def[key]\n\t\t\tif (typeof given[key] === 'object' && given[key] !== null) {\n\t\t\t\tthis.mergeDefault(def[key], given[key])\n\t\t\t}\n\t\t}\n\t\treturn given as Required<T>\n\t}\n\n\tprotected isNumber(data: string): boolean {\n\t\treturn /^[+-]?\\d+(\\.\\d+)?$/.test(data)\n\t}\n\n\t/** @ignore */\n\tpublic on<K extends keyof RainlinkEventsInterface>(\n\t\tevent: K,\n\t\tlistener: (...args: RainlinkEventsInterface[K]) => void\n\t): this {\n\t\tsuper.on(event as string, (...args: any) => listener(...args))\n\t\treturn this\n\t}\n\n\t/** @ignore */\n\tpublic once<K extends keyof RainlinkEventsInterface>(\n\t\tevent: K,\n\t\tlistener: (...args: RainlinkEventsInterface[K]) => void\n\t): this {\n\t\tsuper.once(event as string, (...args: any) => listener(...args))\n\t\treturn this\n\t}\n\n\t/** @ignore */\n\tpublic off<K extends keyof RainlinkEventsInterface>(\n\t\tevent: K,\n\t\tlistener: (...args: RainlinkEventsInterface[K]) => void\n\t): this {\n\t\tsuper.off(event as string, (...args: any) => listener(...args))\n\t\treturn this\n\t}\n\n\t/** @ignore */\n\tpublic emit<K extends keyof RainlinkEventsInterface>(\n\t\tevent: K,\n\t\t...data: RainlinkEventsInterface[K]\n\t): boolean {\n\t\treturn super.emit(event as string, ...data)\n\t}\n}\n","/**\n * All rainlink manager events\n */\nexport enum RainlinkEvents {\n  Debug = 'debug',\n  // Node\n  NodeConnect = 'nodeConnect',\n  NodeDisconnect = 'nodeDisconnect',\n  NodeReconnect = 'nodeReconnect',\n  NodeClosed = 'nodeClosed',\n  NodeError = 'nodeError',\n  // Player\n  PlayerCreate = 'playerCreate',\n  PlayerDestroy = 'playerDestroy',\n  PlayerConnect = 'playerConnect',\n  PlayerDisconnect = 'playerDisconnect',\n  PlayerUpdate = 'playerUpdate',\n  PlayerMoved = 'playerMoved',\n  PlayerPause = 'playerPause',\n  PlayerResume = 'playerResume',\n  PlayerException = 'playerException',\n  PlayerWebsocketClosed = 'playerWebsocketClosed',\n  // Track\n  TrackStuck = 'trackStuck',\n  TrackStart = 'trackStart',\n  TrackEnd = 'trackEnd',\n  TrackResolveError = 'trackResolveError',\n  // Queue\n  QueueAdd = 'queueAdd',\n  QueueRemove = 'queueRemove',\n  QueueShuffle = 'queueShuffle',\n  QueueClear = 'queueClear',\n  QueueEmpty = 'queueEmpty',\n}\n\n/**\n * Rainlink node connect state\n */\nexport enum RainlinkConnectState {\n  Connected,\n  Disconnected,\n  Closed,\n}\n\n/**\n * Discord voice state\n */\nexport enum VoiceState {\n  SESSION_READY,\n  SESSION_ID_MISSING,\n  SESSION_ENDPOINT_MISSING,\n  SESSION_FAILED_UPDATE,\n}\n\n/**\n * Discord voice connect status state\n */\nexport enum VoiceConnectState {\n  CONNECTING,\n  NEARLY,\n  CONNECTED,\n  RECONNECTING,\n  DISCONNECTING,\n  DISCONNECTED,\n}\n\n/**\n * Lavalink load type enum\n */\nexport enum LavalinkLoadType {\n  TRACK = 'track',\n  PLAYLIST = 'playlist',\n  SEARCH = 'search',\n  EMPTY = 'empty',\n  ERROR = 'error',\n}\n\n/**\n * Lavalink default source\n */\nexport const SourceIDs = [\n\t{ name: 'youtube', id: 'yt' },\n\t{ name: 'youtubeMusic', id: 'ytm' },\n\t{ name: 'soundcloud', id: 'sc' },\n]\n\n/**\n * Rainlink plugin type\n */\nexport enum RainlinkPluginType {\n  Default = 'default',\n  SourceResolver = 'sourceResolver',\n}\n\n/**\n * Rainlink player connect state\n */\nexport enum RainlinkPlayerState {\n  CONNECTED,\n  DISCONNECTED,\n  DESTROYED,\n}\n\n/**\n * Rainlink loop enum\n */\nexport enum RainlinkLoopMode {\n  SONG = 'song',\n  QUEUE = 'queue',\n  NONE = 'none',\n}\n\n/** @ignore */\nexport const RainlinkFilterData = {\n\tclear: {},\n\n\teightD: {\n\t\trotation: {\n\t\t\trotationHz: 0.2,\n\t\t},\n\t},\n\n\tsoft: {\n\t\tlowPass: {\n\t\t\tsmoothing: 20.0,\n\t\t},\n\t},\n\n\tspeed: {\n\t\ttimescale: {\n\t\t\tspeed: 1.501,\n\t\t\tpitch: 1.245,\n\t\t\trate: 1.921,\n\t\t},\n\t},\n\n\tkaraoke: {\n\t\tkaraoke: {\n\t\t\tlevel: 1.0,\n\t\t\tmonoLevel: 1.0,\n\t\t\tfilterBand: 220.0,\n\t\t\tfilterWidth: 100.0,\n\t\t},\n\t},\n\tnightcore: {\n\t\ttimescale: {\n\t\t\tspeed: 1.05,\n\t\t\tpitch: 1.125,\n\t\t\trate: 1.05,\n\t\t},\n\t},\n\n\tpop: {\n\t\tequalizer: [\n\t\t\t{ band: 0, gain: -0.25 },\n\t\t\t{ band: 1, gain: 0.48 },\n\t\t\t{ band: 2, gain: 0.59 },\n\t\t\t{ band: 3, gain: 0.72 },\n\t\t\t{ band: 4, gain: 0.56 },\n\t\t\t{ band: 6, gain: -0.24 },\n\t\t\t{ band: 8, gain: -0.16 },\n\t\t],\n\t},\n\n\tvaporwave: {\n\t\tequalizer: [\n\t\t\t{ band: 1, gain: 0.3 },\n\t\t\t{ band: 0, gain: 0.3 },\n\t\t],\n\t\ttimescale: { pitch: 0.5 },\n\t\ttremolo: { depth: 0.3, frequency: 14 },\n\t},\n\n\tbass: {\n\t\tequalizer: [\n\t\t\t{ band: 0, gain: 0.1 },\n\t\t\t{ band: 1, gain: 0.1 },\n\t\t\t{ band: 2, gain: 0.05 },\n\t\t\t{ band: 3, gain: 0.05 },\n\t\t\t{ band: 4, gain: -0.05 },\n\t\t\t{ band: 5, gain: -0.05 },\n\t\t\t{ band: 6, gain: 0 },\n\t\t\t{ band: 7, gain: -0.05 },\n\t\t\t{ band: 8, gain: -0.05 },\n\t\t\t{ band: 9, gain: 0 },\n\t\t\t{ band: 10, gain: 0.05 },\n\t\t\t{ band: 11, gain: 0.05 },\n\t\t\t{ band: 12, gain: 0.1 },\n\t\t\t{ band: 13, gain: 0.1 },\n\t\t],\n\t},\n\n\tparty: {\n\t\tequalizer: [\n\t\t\t{ band: 0, gain: -1.16 },\n\t\t\t{ band: 1, gain: 0.28 },\n\t\t\t{ band: 2, gain: 0.42 },\n\t\t\t{ band: 3, gain: 0.5 },\n\t\t\t{ band: 4, gain: 0.36 },\n\t\t\t{ band: 5, gain: 0 },\n\t\t\t{ band: 6, gain: -0.3 },\n\t\t\t{ band: 7, gain: -0.21 },\n\t\t\t{ band: 8, gain: -0.21 },\n\t\t],\n\t},\n\n\tearrape: {\n\t\tequalizer: [\n\t\t\t{ band: 0, gain: 0.25 },\n\t\t\t{ band: 1, gain: 0.5 },\n\t\t\t{ band: 2, gain: -0.5 },\n\t\t\t{ band: 3, gain: -0.25 },\n\t\t\t{ band: 4, gain: 0 },\n\t\t\t{ band: 6, gain: -0.025 },\n\t\t\t{ band: 7, gain: -0.0175 },\n\t\t\t{ band: 8, gain: 0 },\n\t\t\t{ band: 9, gain: 0 },\n\t\t\t{ band: 10, gain: 0.0125 },\n\t\t\t{ band: 11, gain: 0.025 },\n\t\t\t{ band: 12, gain: 0.375 },\n\t\t\t{ band: 13, gain: 0.125 },\n\t\t\t{ band: 14, gain: 0.125 },\n\t\t],\n\t},\n\n\tequalizer: {\n\t\tequalizer: [\n\t\t\t{ band: 0, gain: 0.375 },\n\t\t\t{ band: 1, gain: 0.35 },\n\t\t\t{ band: 2, gain: 0.125 },\n\t\t\t{ band: 5, gain: -0.125 },\n\t\t\t{ band: 6, gain: -0.125 },\n\t\t\t{ band: 8, gain: 0.25 },\n\t\t\t{ band: 9, gain: 0.125 },\n\t\t\t{ band: 10, gain: 0.15 },\n\t\t\t{ band: 11, gain: 0.2 },\n\t\t\t{ band: 12, gain: 0.25 },\n\t\t\t{ band: 13, gain: 0.35 },\n\t\t\t{ band: 14, gain: 0.4 },\n\t\t],\n\t},\n\n\telectronic: {\n\t\tequalizer: [\n\t\t\t{ band: 0, gain: 0.375 },\n\t\t\t{ band: 1, gain: 0.35 },\n\t\t\t{ band: 2, gain: 0.125 },\n\t\t\t{ band: 5, gain: -0.125 },\n\t\t\t{ band: 6, gain: -0.125 },\n\t\t\t{ band: 8, gain: 0.25 },\n\t\t\t{ band: 9, gain: 0.125 },\n\t\t\t{ band: 10, gain: 0.15 },\n\t\t\t{ band: 11, gain: 0.2 },\n\t\t\t{ band: 12, gain: 0.25 },\n\t\t\t{ band: 13, gain: 0.35 },\n\t\t\t{ band: 14, gain: 0.4 },\n\t\t],\n\t},\n\tradio: {\n\t\tequalizer: [\n\t\t\t{ band: 0, gain: -0.25 },\n\t\t\t{ band: 1, gain: 0.48 },\n\t\t\t{ band: 2, gain: 0.59 },\n\t\t\t{ band: 3, gain: 0.72 },\n\t\t\t{ band: 4, gain: 0.56 },\n\t\t\t{ band: 6, gain: -0.24 },\n\t\t\t{ band: 8, gain: -0.16 },\n\t\t],\n\t},\n\n\ttremolo: {\n\t\ttremolo: {\n\t\t\tdepth: 0.3,\n\t\t\tfrequency: 14,\n\t\t},\n\t},\n\n\ttreblebass: {\n\t\tequalizer: [\n\t\t\t{ band: 0, gain: 0.6 },\n\t\t\t{ band: 1, gain: 0.67 },\n\t\t\t{ band: 2, gain: 0.67 },\n\t\t\t{ band: 3, gain: 0 },\n\t\t\t{ band: 4, gain: -0.5 },\n\t\t\t{ band: 5, gain: 0.15 },\n\t\t\t{ band: 6, gain: -0.45 },\n\t\t\t{ band: 7, gain: 0.23 },\n\t\t\t{ band: 8, gain: 0.35 },\n\t\t\t{ band: 9, gain: 0.45 },\n\t\t\t{ band: 10, gain: 0.55 },\n\t\t\t{ band: 11, gain: 0.6 },\n\t\t\t{ band: 12, gain: 0.55 },\n\t\t],\n\t},\n\n\tvibrato: {\n\t\tvibrato: {\n\t\t\tdepth: 0.3,\n\t\t\tfrequency: 14,\n\t\t},\n\t},\n\n\tchina: {\n\t\ttimescale: {\n\t\t\tspeed: 0.75,\n\t\t\tpitch: 1.25,\n\t\t\trate: 1.25,\n\t\t},\n\t},\n\n\tchimpunk: {\n\t\ttimescale: {\n\t\t\tspeed: 1.05,\n\t\t\tpitch: 1.35,\n\t\t\trate: 1.25,\n\t\t},\n\t},\n\n\tdarthvader: {\n\t\ttimescale: {\n\t\t\tspeed: 0.975,\n\t\t\tpitch: 0.5,\n\t\t\trate: 0.8,\n\t\t},\n\t},\n\n\tdaycore: {\n\t\tequalizer: [\n\t\t\t{ band: 0, gain: 0 },\n\t\t\t{ band: 1, gain: 0 },\n\t\t\t{ band: 2, gain: 0 },\n\t\t\t{ band: 3, gain: 0 },\n\t\t\t{ band: 4, gain: 0 },\n\t\t\t{ band: 5, gain: 0 },\n\t\t\t{ band: 6, gain: 0 },\n\t\t\t{ band: 7, gain: 0 },\n\t\t\t{ band: 8, gain: -0.25 },\n\t\t\t{ band: 9, gain: -0.25 },\n\t\t\t{ band: 10, gain: -0.25 },\n\t\t\t{ band: 11, gain: -0.25 },\n\t\t\t{ band: 12, gain: -0.25 },\n\t\t\t{ band: 13, gain: -0.25 },\n\t\t],\n\t\ttimescale: {\n\t\t\tpitch: 0.63,\n\t\t\trate: 1.05,\n\t\t},\n\t},\n\n\tdoubletime: {\n\t\ttimescale: {\n\t\t\tspeed: 1.165,\n\t\t},\n\t},\n\n\tpitch: {\n\t\ttimescale: { pitch: 3 },\n\t},\n\n\trate: {\n\t\ttimescale: { rate: 2 },\n\t},\n\n\tslow: {\n\t\ttimescale: {\n\t\t\tspeed: 0.5,\n\t\t\tpitch: 1.0,\n\t\t\trate: 0.8,\n\t\t},\n\t},\n}\n\nexport type RainlinkFilterMode = keyof typeof RainlinkFilterData\n","import { RainlinkEvents } from '../Interface/Constants'\nimport { RainlinkSearchResult, RainlinkSearchResultType } from '../Interface/Manager'\nimport { RawTrack } from '../Interface/Rest'\nimport { ResolveOptions } from '../Interface/Track'\nimport { RainlinkPlayer } from './RainlinkPlayer'\n\n/**\n * A class for managing track info\n */\nexport class RainlinkTrack {\n\t/** Encoded string from lavalink */\n\tencoded: string\n\t/** Identifier string from lavalink */\n\tidentifier: string\n\t/** Whenever track is seekable or not */\n\tisSeekable: boolean\n\t/** Track's author */\n\tauthor: string\n\t/** Track's duration */\n\tduration: number\n\t/** Whenever track is stream able or not */\n\tisStream: boolean\n\t/** Track's position */\n\tposition: number\n\t/** Track's title */\n\ttitle: string\n\t/** Track's URL */\n\turi: string | null = null\n\t/** Track's artwork URL */\n\tartworkUrl: string | null = null\n\t/** Track's isrc */\n\tisrc: string | null = null\n\t/** Track's source name */\n\tsource: string\n\t/** Data from lavalink plugin */\n\tpluginInfo: unknown\n\t/** Track's requester */\n\trequester: unknown\n\t/** Track's realUri (youtube fall back) */\n\trealUri: string | null = null\n\t/** Name of the driver that search this track */\n\tdriverName?: string\n\n\t/**\n   * The rainlink track class for playing track from lavalink\n   * @param options The raw track resolved from rest, use RawTrack interface\n   * @param requester The requester details of this track\n   */\n\tconstructor(\n    protected options: RawTrack,\n    requester: unknown,\n    driverName?: string\n\t) {\n\t\tthis.encoded = options.encoded\n\t\tthis.identifier = options.info.identifier\n\t\tthis.isSeekable = options.info.isSeekable\n\t\tthis.author = options.info.author\n\t\tthis.duration = options.info.length\n\t\tthis.isStream = options.info.isStream\n\t\tthis.position = options.info.position\n\t\tthis.title = options.info.title\n\t\tthis.uri = options.info.uri\n\t\tthis.artworkUrl = options.info.artworkUrl\n\t\tthis.isrc = options.info.isrc\n\t\tthis.source = options.info.sourceName\n\t\tthis.pluginInfo = options.pluginInfo\n\t\tthis.requester = requester\n\t\tthis.realUri = null\n\t\tthis.driverName = driverName\n\t}\n\n\t/**\n   * Whenever track is able to play or not\n   * @returns boolean\n   */\n\tget isPlayable(): boolean {\n\t\treturn (\n\t\t\t!!this.encoded &&\n      !!this.source &&\n      !!this.identifier &&\n      !!this.author &&\n      !!this.duration &&\n      !!this.title &&\n      !!this.uri\n\t\t)\n\t}\n\n\t/**\n   * Get all raw details of the track\n   * @returns RawTrack\n   */\n\tget raw(): RawTrack {\n\t\treturn {\n\t\t\tencoded: this.encoded,\n\t\t\tinfo: {\n\t\t\t\tidentifier: this.identifier,\n\t\t\t\tisSeekable: this.isSeekable,\n\t\t\t\tauthor: this.author,\n\t\t\t\tlength: this.duration,\n\t\t\t\tisStream: this.isStream,\n\t\t\t\tposition: this.position,\n\t\t\t\ttitle: this.title,\n\t\t\t\turi: this.uri,\n\t\t\t\tartworkUrl: this.artworkUrl,\n\t\t\t\tisrc: this.isrc,\n\t\t\t\tsourceName: this.source,\n\t\t\t},\n\t\t\tpluginInfo: this.pluginInfo,\n\t\t}\n\t}\n\n\t/** @ignore */\n\tpublic async resolver(player: RainlinkPlayer, options?: ResolveOptions): Promise<RainlinkTrack> {\n\t\tconst { overwrite } = options ? options : { overwrite: false }\n\n\t\tif (this.isPlayable && this.driverName == player.node.driver.id) {\n\t\t\tthis.realUri = this.raw.info.uri\n\t\t\treturn this\n\t\t}\n\n\t\tplayer.manager.emit(\n\t\t\tRainlinkEvents.Debug,\n\t\t\t`[Rainlink] / [Track] | Resolving ${this.source} track ${this.title}; Source: ${this.source}`\n\t\t)\n\n\t\tconst result = await this.getTrack(player)\n\t\tif (!result) throw new Error('No results found')\n\n\t\tthis.encoded = result.encoded\n\t\tthis.realUri = result.info.uri\n\t\tthis.duration = result.info.length\n\n\t\tif (overwrite) {\n\t\t\tthis.title = result.info.title\n\t\t\tthis.identifier = result.info.identifier\n\t\t\tthis.isSeekable = result.info.isSeekable\n\t\t\tthis.author = result.info.author\n\t\t\tthis.duration = result.info.length\n\t\t\tthis.isStream = result.info.isStream\n\t\t\tthis.uri = result.info.uri\n\t\t}\n\t\treturn this\n\t}\n\n\tprotected async getTrack(player: RainlinkPlayer): Promise<RawTrack> {\n\t\tconst result = await this.resolverEngine(player)\n\n\t\tif (!result || !result.tracks.length) throw new Error('No results found')\n\n\t\tconst rawTracks = result.tracks.map((x) => x.raw)\n\n\t\tif (this.author) {\n\t\t\tconst author = [this.author, `${this.author} - Topic`]\n\t\t\tconst officialTrack = rawTracks.find(\n\t\t\t\t(track) =>\n\t\t\t\t\tauthor.some((name) =>\n\t\t\t\t\t\tnew RegExp(`^${this.escapeRegExp(name)}$`, 'i').test(track.info.author)\n\t\t\t\t\t) || new RegExp(`^${this.escapeRegExp(this.title)}$`, 'i').test(track.info.title)\n\t\t\t)\n\t\t\tif (officialTrack) return officialTrack\n\t\t}\n\t\tif (this.duration) {\n\t\t\tconst sameDuration = rawTracks.find(\n\t\t\t\t(track) =>\n\t\t\t\t\ttrack.info.length >= (this.duration ? this.duration : 0) - 2000 &&\n          track.info.length <= (this.duration ? this.duration : 0) + 2000\n\t\t\t)\n\t\t\tif (sameDuration) return sameDuration\n\t\t}\n\n\t\treturn rawTracks[0]\n\t}\n\n\tprotected escapeRegExp(string: string) {\n\t\treturn string.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n\t}\n\n\tprotected async resolverEngine(player: RainlinkPlayer): Promise<RainlinkSearchResult> {\n\t\tconst defaultSearchEngine = player.manager.rainlinkOptions.options!.defaultSearchEngine\n\t\tconst engine = player.manager.searchEngines.get(this.source || defaultSearchEngine || 'youtube')\n\t\tconst searchQuery = [this.author, this.title].filter((x) => !!x).join(' - ')\n\t\tconst searchFallbackEngineName = player.manager.rainlinkOptions.options!.searchFallback!.engine\n\t\tconst searchFallbackEngine = player.manager.searchEngines.get(searchFallbackEngineName)\n\n\t\tconst prase1 = await player.search(`directSearch=${this.uri}`, {\n\t\t\trequester: this.requester,\n\t\t})\n\t\tif (prase1.tracks.length !== 0) return prase1\n\n\t\tconst prase2 = await player.search(`directSearch=${engine}search:${searchQuery}`, {\n\t\t\trequester: this.requester,\n\t\t})\n\t\tif (prase2.tracks.length !== 0) return prase2\n\n\t\tif (player.manager.rainlinkOptions.options!.searchFallback?.enable && searchFallbackEngine) {\n\t\t\tconst prase3 = await player.search(\n\t\t\t\t`directSearch=${searchFallbackEngine}search:${searchQuery}`,\n\t\t\t\t{\n\t\t\t\t\trequester: this.requester,\n\t\t\t\t}\n\t\t\t)\n\t\t\tif (prase3.tracks.length !== 0) return prase3\n\t\t}\n\n\t\treturn {\n\t\t\ttype: RainlinkSearchResultType.SEARCH,\n\t\t\tplaylistName: undefined,\n\t\t\ttracks: [],\n\t\t}\n\t}\n}\n","import { RainlinkEvents } from '../Interface/Constants'\nimport { Rainlink } from '../Rainlink'\nimport { RainlinkPlayer } from './RainlinkPlayer'\nimport { RainlinkTrack } from './RainlinkTrack'\n\n/**\n * A class for managing track queue\n */\nexport class RainlinkQueue extends Array<RainlinkTrack> {\n\t/** Rainlink manager */\n\tmanager: Rainlink\n\t/** Rainlink player */\n\tplayer: RainlinkPlayer\n\n\t/**\n   * The rainlink track queue handler class\n   * @param manager The rainlink manager\n   * @param player The current rainlink player\n   */\n\tconstructor(manager: Rainlink, player: RainlinkPlayer) {\n\t\tsuper()\n\t\tthis.manager = manager\n\t\tthis.player = player\n\t}\n\n\t/** Get the size of queue */\n\tpublic get size() {\n\t\treturn this.length\n\t}\n\n\t/** Get the size of queue including current */\n\tpublic get totalSize(): number {\n\t\treturn this.length + (this.current ? 1 : 0)\n\t}\n\n\t/** Check if the queue is empty or not */\n\tpublic get isEmpty() {\n\t\treturn this.length === 0\n\t}\n\n\t/** Get the queue's duration */\n\tpublic get duration() {\n\t\treturn this.reduce((acc, cur) => acc + (cur.duration || 0), 0)\n\t}\n\n\t/** Current playing track */\n\tpublic current: RainlinkTrack | undefined | null = null\n\t/** Previous playing tracks */\n\tpublic previous: RainlinkTrack[] = []\n\n\t/**\n   * Add track(s) to the queue\n   * @param track RainlinkTrack to add\n   * @returns RainlinkQueue\n   */\n\tpublic add(track: RainlinkTrack | RainlinkTrack[]): RainlinkQueue {\n\t\tif (Array.isArray(track) && track.some((t) => !(t instanceof RainlinkTrack)))\n\t\t\tthrow new Error('Track must be an instance of RainlinkTrack')\n\t\tif (!Array.isArray(track) && !(track instanceof RainlinkTrack)) track = [track]\n\n\t\tif (!this.current) {\n\t\t\tif (Array.isArray(track)) this.current = track.shift()\n\t\t\telse {\n\t\t\t\tthis.current = track\n\t\t\t\treturn this\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(track)) for (const t of track) this.push(t)\n\t\telse this.push(track)\n\t\tthis.manager.emit(\n\t\t\tRainlinkEvents.QueueAdd,\n\t\t\tthis.player,\n\t\t\tthis,\n\t\t\tArray.isArray(track) ? [...track] : [track]\n\t\t)\n\t\treturn this\n\t}\n\n\t/**\n   * Remove track from the queue\n   * @param position Position of the track\n   * @returns RainlinkQueue\n   */\n\tpublic remove(position: number): RainlinkQueue {\n\t\tif (position < 0 || position >= this.length)\n\t\t\tthrow new Error('Position must be between 0 and ' + (this.length - 1))\n\t\tconst track = this[position]\n\t\tthis.splice(position, 1)\n\t\tthis.manager.emit(RainlinkEvents.QueueRemove, this.player, this, track)\n\t\treturn this\n\t}\n\n\t/** Shuffle the queue */\n\tpublic shuffle(): RainlinkQueue {\n\t\tfor (let i = this.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1))\n      ;[this[i], this[j]] = [this[j], this[i]]\n\t\t}\n\t\tthis.manager.emit(RainlinkEvents.QueueShuffle, this.player, this)\n\t\treturn this\n\t}\n\n\t/** Clear the queue */\n\tpublic clear(): RainlinkQueue {\n\t\tthis.splice(0, this.length)\n\t\tthis.manager.emit(RainlinkEvents.QueueClear, this.player, this)\n\t\treturn this\n\t}\n}\n","/**\n * A class for storing data using key like Map.\n * Aka: reduce version of Map\n */\nexport class RainlinkDatabase<G = unknown> {\n\tprotected cache: Record<string, G> = {}\n\n\t/**\n   * Get data from database\n   * @param key key of that data\n   * @returns D\n   */\n\tget<D = G>(key: string): D | undefined {\n\t\treturn (this.cache[key] as unknown as D) ?? undefined\n\t}\n\n\t/**\n   * detete data from database and returns the deleted data\n   * @param key key of that data\n   * @returns D\n   */\n\tdelete<D = G>(key: string): D | undefined {\n\t\tconst data = (this.cache[key] as unknown as D) ?? undefined\n\t\tdelete this.cache[key]\n\t\treturn data\n\t}\n\n\t/**\n   * detete all data from database\n   */\n\tclear(): void {\n\t\tthis.cache = {}\n\t}\n\n\t/**\n   * Set data from database\n   * @param key the key you want to set\n   * @param data data of that key\n   * @returns D\n   */\n\tset<D = G>(key: string, data: D): D | undefined {\n\t\tthis.cache[key] = data as unknown as G\n\t\treturn data\n\t}\n\n\t/**\n   * executes a provided function once for each array element.\n   * @param callback Callback function\n   */\n\tforEach(callback: (value: G, key: string) => unknown): void {\n\t\tfor (const data of this.full) {\n\t\t\tcallback(data[1], data[0])\n\t\t}\n\t}\n\n\t/**\n   * Get how many elements of current database\n   * @returns number\n   */\n\tget size(): number {\n\t\treturn Object.keys(this.cache).length\n\t}\n\n\t/**\n   * Get all current values of current database\n   * @returns unknown[]\n   */\n\tget values(): G[] {\n\t\treturn Object.values(this.cache)\n\t}\n\n\t/**\n   * Get all current values of current database\n   * @returns unknown[]\n   */\n\tget full(): [string, G][] {\n\t\tconst finalRes: [string, G][] = []\n\t\tconst keys = Object.keys(this.cache)\n\t\tconst values = Object.values(this.cache)\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tfinalRes.push([keys[i], values[i]])\n\t\t}\n\t\treturn finalRes\n\t}\n}\n","import util from 'node:util'\nimport {\n\tRainlinkEvents,\n\tRainlinkFilterData,\n\tRainlinkFilterMode,\n\tRainlinkPlayerState,\n} from '../Interface/Constants'\nimport {\n\tBand,\n\tChannelMix,\n\tDistortion,\n\tFilterOptions,\n\tFreq,\n\tKaraoke,\n\tLowPass,\n\tRotation,\n\tTimescale,\n} from '../Interface/Player'\nimport { RainlinkPlayer } from './RainlinkPlayer'\n\n/**\n * This class is for set, clear and managing filter\n */\nexport class RainlinkFilter {\n\t/**\n   * Current filter config\n   */\n\tpublic currentFilter: FilterOptions | null = null\n\n\tconstructor(protected player: RainlinkPlayer) {}\n\n\t/**\n   * Set a filter that prebuilt in rainlink\n   * @param filter The filter name\n   * @returns RainlinkPlayer\n   */\n\tpublic async set(filter: RainlinkFilterMode): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\n\t\tconst filterData = RainlinkFilterData[filter]\n\n\t\tif (!filterData) {\n\t\t\tthis.debug(`Filter ${filter} not avaliable in Rainlink's filter prebuilt`)\n\t\t\treturn this.player\n\t\t}\n\n\t\tawait this.player.send({\n\t\t\tguildId: this.player.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\tfilters: filterData,\n\t\t\t},\n\t\t})\n\n\t\tthis.currentFilter = filterData\n\n\t\tthis.debug(\n\t\t\tfilter !== 'clear'\n\t\t\t\t? `${filter} filter has been successfully set.`\n\t\t\t\t: 'All filters have been successfully reset to their default positions.'\n\t\t)\n\n\t\treturn this.player\n\t}\n\n\t/**\n   * Clear all the filter\n   * @returns RainlinkPlayer\n   */\n\tpublic async clear(): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\n\t\tawait this.player.send({\n\t\t\tguildId: this.player.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\tfilters: {},\n\t\t\t},\n\t\t})\n\n\t\tthis.currentFilter = null\n\n\t\tthis.debug('All filters have been successfully reset to their default positions.')\n\n\t\treturn this.player\n\t}\n\n\t/**\n   * Sets the filter volume of the player\n   * @param volume Target volume 0.0-5.0\n   */\n\tpublic async setVolume(volume: number): Promise<RainlinkPlayer> {\n\t\treturn this.setRaw({ volume })\n\t}\n\n\t/**\n   * Change the equalizer settings applied to the currently playing track\n   * @param equalizer An array of objects that conforms to the Bands type that define volumes at different frequencies\n   */\n\tpublic setEqualizer(equalizer: Band[]): Promise<RainlinkPlayer> {\n\t\treturn this.setRaw({ equalizer })\n\t}\n\n\t/**\n   * Change the karaoke settings applied to the currently playing track\n   * @param karaoke An object that conforms to the KaraokeSettings type that defines a range of frequencies to mute\n   */\n\tpublic setKaraoke(karaoke?: Karaoke): Promise<RainlinkPlayer> {\n\t\treturn this.setRaw({ karaoke: karaoke || null })\n\t}\n\n\t/**\n   * Change the timescale settings applied to the currently playing track\n   * @param timescale An object that conforms to the TimescaleSettings type that defines the time signature to play the audio at\n   */\n\tpublic setTimescale(timescale?: Timescale): Promise<RainlinkPlayer> {\n\t\treturn this.setRaw({ timescale: timescale || null })\n\t}\n\n\t/**\n   * Change the tremolo settings applied to the currently playing track\n   * @param tremolo An object that conforms to the FreqSettings type that defines an oscillation in volume\n   */\n\tpublic setTremolo(tremolo?: Freq): Promise<RainlinkPlayer> {\n\t\treturn this.setRaw({ tremolo: tremolo || null })\n\t}\n\n\t/**\n   * Change the vibrato settings applied to the currently playing track\n   * @param vibrato An object that conforms to the FreqSettings type that defines an oscillation in pitch\n   */\n\tpublic setVibrato(vibrato?: Freq): Promise<RainlinkPlayer> {\n\t\treturn this.setRaw({ vibrato: vibrato || null })\n\t}\n\n\t/**\n   * Change the rotation settings applied to the currently playing track\n   * @param rotation An object that conforms to the RotationSettings type that defines the frequency of audio rotating round the listener\n   */\n\tpublic setRotation(rotation?: Rotation): Promise<RainlinkPlayer> {\n\t\treturn this.setRaw({ rotation: rotation || null })\n\t}\n\n\t/**\n   * Change the distortion settings applied to the currently playing track\n   * @param distortion An object that conforms to DistortionSettings that defines distortions in the audio\n   * @returns The current player instance\n   */\n\tpublic setDistortion(distortion?: Distortion): Promise<RainlinkPlayer> {\n\t\treturn this.setRaw({ distortion: distortion || null })\n\t}\n\n\t/**\n   * Change the channel mix settings applied to the currently playing track\n   * @param channelMix An object that conforms to ChannelMixSettings that defines how much the left and right channels affect each other (setting all factors to 0.5 causes both channels to get the same audio)\n   */\n\tpublic setChannelMix(channelMix?: ChannelMix): Promise<RainlinkPlayer> {\n\t\treturn this.setRaw({ channelMix: channelMix || null })\n\t}\n\n\t/**\n   * Change the low pass settings applied to the currently playing track\n   * @param lowPass An object that conforms to LowPassSettings that defines the amount of suppression on higher frequencies\n   */\n\tpublic setLowPass(lowPass?: LowPass): Promise<RainlinkPlayer> {\n\t\treturn this.setRaw({ lowPass: lowPass || null })\n\t}\n\n\t/**\n   * Set a custom filter\n   * @param filter The filter name\n   * @returns RainlinkPlayer\n   */\n\tpublic async setRaw(filter: FilterOptions): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\t\tawait this.player.send({\n\t\t\tguildId: this.player.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\tfilters: filter,\n\t\t\t},\n\t\t})\n\n\t\tthis.currentFilter = filter\n\n\t\tthis.debug('Custom filter has been successfully set. Data: ' + util.inspect(filter))\n\n\t\treturn this.player\n\t}\n\n\tprotected debug(logs: string) {\n\t\tthis.player.manager.emit(\n\t\t\tRainlinkEvents.Debug,\n\t\t\t`[Rainlink] / [Player @ ${this.player.guildId}] / [Filter] | ${logs}`\n\t\t)\n\t}\n\n\tprotected checkDestroyed(): void {\n\t\tif (this.player.state === RainlinkPlayerState.DESTROYED) throw new Error('Player is destroyed')\n\t}\n}\n","import { RainlinkDatabase } from './RainlinkDatabase'\n\nexport class RainlinkFunctions extends RainlinkDatabase<(...args: any) => unknown> {\n\t/**\n   * Function to execute custom function\n   * @param commandName Function name\n   * @param args Function args\n   */\n\tpublic async exec<D = unknown>(commandName: string, ...args: unknown[]): Promise<D | undefined> {\n\t\tconst func = super.get(commandName)\n\t\tif (!func) return undefined\n\t\tconst getData = (await func(...args)) as D\n\t\treturn getData\n\t}\n}\n","import { PlayOptions } from '../Interface/Player.js'\nimport { Rainlink } from '../Rainlink.js'\nimport { RainlinkNode } from '../Node/RainlinkNode.js'\nimport { RainlinkQueue } from './RainlinkQueue.js'\nimport {\n\tRainlinkEvents,\n\tRainlinkLoopMode,\n\tRainlinkPlayerState,\n\tVoiceConnectState,\n} from '../Interface/Constants.js'\nimport { RainlinkTrack } from './RainlinkTrack.js'\nimport { UpdatePlayerInfo, UpdatePlayerOptions } from '../Interface/Rest.js'\nimport { RainlinkSearchOptions, RainlinkSearchResult } from '../Interface/Manager.js'\nimport { RainlinkDatabase } from '../Utilities/RainlinkDatabase.js'\nimport { RainlinkFilter } from './RainlinkFilter.js'\nimport { RainlinkVoice } from './RainlinkVoice.js'\nimport { RainlinkFunctions } from '../Utilities/RainlinkFunctions.js'\n\n/**\n * A class for managing player action.\n */\nexport class RainlinkPlayer {\n\t/**\n   * Main manager class\n   */\n\tpublic manager: Rainlink\n\t/**\n   * Player's current using lavalink server\n   */\n\tpublic node: RainlinkNode\n\t/**\n   * Player's guild id\n   */\n\tpublic guildId: string\n\t/**\n   * Player's voice id\n   */\n\tpublic voiceId: string | null\n\t/**\n   * Player's text id\n   */\n\tpublic textId: string\n\t/**\n   * Player's queue\n   */\n\tpublic readonly queue: RainlinkQueue\n\t/**\n   * The temporary database of player, u can set any thing here and us like Map class!\n   */\n\tpublic readonly data: RainlinkDatabase<unknown>\n\t/**\n   * Whether the player is paused or not\n   */\n\tpublic paused: boolean = true\n\t/**\n   * Get the current track's position of the player\n   */\n\tpublic position: number = 0\n\t/**\n   * Get the current volume of the player\n   */\n\tpublic volume: number\n\t/**\n   * Whether the player is playing or not\n   */\n\tpublic playing: boolean = false\n\t/**\n   * Get the current loop mode of the player\n   */\n\tpublic loop: RainlinkLoopMode\n\t/**\n   * Get the current state of the player\n   */\n\tpublic state: RainlinkPlayerState\n\t/**\n   * Whether the player is deafened or not\n   */\n\tpublic deaf: boolean\n\t/**\n   * Whether the player is muted or not\n   */\n\tpublic mute: boolean\n\t/**\n   * ID of the current track\n   */\n\tpublic track: string | null = null\n\t/**\n   * All function to extend support driver\n   */\n\tpublic functions: RainlinkFunctions\n\t/**\n   * ID of the Shard that contains the guild that contains the connected voice channel\n   */\n\tpublic shardId: number\n\t/**\n   * Filter class to set, clear get the current filter data\n   */\n\tpublic filter: RainlinkFilter\n\t/**\n   * Voice handler class\n   */\n\tpublic voice: RainlinkVoice\n\t/** @ignore */\n\tpublic sudoDestroy: boolean = false\n\n\t/**\n   * The rainlink player handler class\n   * @param manager The rainlink manager\n   * @param voiceOptions The rainlink voice option, use VoiceChannelOptions interface\n   * @param node The rainlink current use node\n   */\n\tconstructor(manager: Rainlink, voice: RainlinkVoice, node: RainlinkNode) {\n\t\tthis.voice = voice\n\t\tthis.manager = manager\n\t\tconst rainlinkOptions = this.manager.rainlinkOptions.options!\n\t\tthis.guildId = this.voice.guildId\n\t\tthis.voiceId = this.voice.voiceId\n\t\tthis.shardId = this.voice.shardId\n\t\tthis.mute = this.voice.mute ?? false\n\t\tthis.deaf = this.voice.deaf ?? false\n\t\tthis.node = node\n\t\tthis.guildId = this.voice.guildId\n\t\tthis.voiceId = this.voice.voiceId\n\t\tthis.textId = this.voice.options.textId\n\t\tconst customQueue = rainlinkOptions.structures && rainlinkOptions.structures.queue\n\t\tthis.queue = customQueue\n\t\t\t? new customQueue(this.manager, this)\n\t\t\t: new RainlinkQueue(this.manager, this)\n\t\tthis.data = new RainlinkDatabase<unknown>()\n\t\tif (rainlinkOptions.structures && rainlinkOptions.structures.filter)\n\t\t\tthis.filter = new rainlinkOptions.structures.filter(this)\n\t\telse this.filter = new RainlinkFilter(this)\n\t\tthis.volume = rainlinkOptions.defaultVolume!\n\t\tthis.loop = RainlinkLoopMode.NONE\n\t\tthis.state = RainlinkPlayerState.DESTROYED\n\t\tthis.deaf = this.voice.deaf ?? false\n\t\tthis.mute = this.voice.mute ?? false\n\t\tthis.functions = new RainlinkFunctions()\n\t\tif (this.node.driver.playerFunctions.size !== 0) {\n\t\t\tthis.node.driver.playerFunctions.forEach((data, key) => {\n\t\t\t\tthis.functions.set(key, data.bind(null, this))\n\t\t\t})\n\t\t}\n\t\tif (this.voice.options.volume && this.voice.options.volume !== this.volume)\n\t\t\tthis.volume = this.voice.options.volume\n\t}\n\n\t/**\n   * Sends server update to lavalink\n   * @internal\n   */\n\tpublic async sendServerUpdate(): Promise<void> {\n\t\tconst playerUpdate = {\n\t\t\tguildId: this.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\tvoice: {\n\t\t\t\t\ttoken: this.voice.serverUpdate!.token,\n\t\t\t\t\tendpoint: this.voice.serverUpdate!.endpoint,\n\t\t\t\t\tsessionId: this.voice.sessionId!,\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t\tawait this.node.rest.updatePlayer(playerUpdate)\n\t}\n\n\t/**\n   * Destroy the player\n   * @internal\n   */\n\tpublic async destroy(): Promise<void> {\n\t\tthis.checkDestroyed()\n\t\tthis.sudoDestroy = true\n\t\tif (this.playing)\n\t\t\tawait this.node.rest.updatePlayer({\n\t\t\t\tguildId: this.guildId,\n\t\t\t\tplayerOptions: {\n\t\t\t\t\ttrack: {\n\t\t\t\t\t\tencoded: null,\n\t\t\t\t\t\tlength: 0,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t})\n\t\tthis.clear(false)\n\t\tthis.disconnect()\n\t\tawait this.node.rest.destroyPlayer(this.guildId)\n\t\tthis.manager.players.delete(this.guildId)\n\t\tthis.state = RainlinkPlayerState.DESTROYED\n\t\tthis.debug('Player destroyed')\n\t\tthis.voiceId = ''\n\t\tthis.manager.emit(RainlinkEvents.PlayerDestroy, this)\n\t\tthis.sudoDestroy = false\n\t}\n\n\t/**\n   * Play a track\n   * @param track Track to play\n   * @param options Play options\n   * @returns RainlinkPlayer\n   */\n\tpublic async play(track?: RainlinkTrack, options?: PlayOptions): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\n\t\tif (track && !(track instanceof RainlinkTrack)) throw new Error('track must be a RainlinkTrack')\n\n\t\tif (!track && !this.queue.totalSize) throw new Error('No track is available to play')\n\n\t\tif (!options || typeof options.replaceCurrent !== 'boolean')\n\t\t\toptions = { ...options, replaceCurrent: false }\n\n\t\tif (track) {\n\t\t\tif (!options.replaceCurrent && this.queue.current) this.queue.unshift(this.queue.current)\n\t\t\tthis.queue.current = track\n\t\t} else if (!this.queue.current) this.queue.current = this.queue.shift()\n\n\t\tif (!this.queue.current) throw new Error('No track is available to play')\n\n\t\tconst current = this.queue.current\n\n\t\tlet errorMessage: string | undefined\n\n\t\tconst resolveResult = await current.resolver(this).catch((e: any) => {\n\t\t\terrorMessage = e.message\n\t\t\treturn null\n\t\t})\n\n\t\tif (!resolveResult || (resolveResult && !resolveResult.isPlayable)) {\n\t\t\tthis.manager.emit(RainlinkEvents.TrackResolveError, this, current, errorMessage!)\n\t\t\tthis.debug(`Player resolve error: ${errorMessage}`)\n\t\t\tthis.queue.current = null\n\t\t\tthis.queue.size\n\t\t\t\t? await this.play()\n\t\t\t\t: this.manager.emit(RainlinkEvents.QueueEmpty, this, this.queue)\n\t\t\treturn this\n\t\t}\n\n\t\tthis.playing = true\n\t\tthis.track = current.encoded\n\n\t\tconst playerOptions: UpdatePlayerOptions = {\n\t\t\ttrack: {\n\t\t\t\tencoded: current.encoded,\n\t\t\t\tlength: current.duration,\n\t\t\t},\n\t\t\t...options,\n\t\t\tvolume: this.volume,\n\t\t}\n\n\t\tif (playerOptions.paused) {\n\t\t\tthis.paused = playerOptions.paused\n\t\t\tthis.playing = !this.paused\n\t\t}\n\t\tif (playerOptions.position) this.position = playerOptions.position\n\n\t\tawait this.node.rest.updatePlayer({\n\t\t\tguildId: this.guildId,\n\t\t\tnoReplace: options?.noReplace ?? false,\n\t\t\tplayerOptions,\n\t\t})\n\n\t\treturn this\n\t}\n\n\t/**\n   * Set the loop mode of the track\n   * @param mode Mode to loop\n   * @returns RainlinkPlayer\n   */\n\tpublic setLoop(mode: RainlinkLoopMode): RainlinkPlayer {\n\t\tthis.checkDestroyed()\n\t\tthis.loop = mode\n\t\treturn this\n\t}\n\n\t/**\n   * Search track directly from player\n   * @param query The track search query link\n   * @param options The track search options\n   * @returns RainlinkSearchResult\n   */\n\tpublic async search(\n\t\tquery: string,\n\t\toptions?: RainlinkSearchOptions\n\t): Promise<RainlinkSearchResult> {\n\t\tthis.checkDestroyed()\n\t\treturn await this.manager.search(query, {\n\t\t\tnodeName: this.node.options.name,\n\t\t\t...options,\n\t\t})\n\t}\n\n\t/**\n   * Pause the track\n   * @returns RainlinkPlayer\n   */\n\tpublic async pause(): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\t\tif (this.paused == true) return this\n\t\tawait this.node.rest.updatePlayer({\n\t\t\tguildId: this.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\tpaused: true,\n\t\t\t},\n\t\t})\n\t\tthis.paused = true\n\t\tthis.playing = false\n\t\tthis.manager.emit(RainlinkEvents.PlayerPause, this, this.queue.current!)\n\t\treturn this\n\t}\n\n\t/**\n   * Resume the track\n   * @returns RainlinkPlayer\n   */\n\tpublic async resume(): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\t\tif (this.paused == false) return this\n\t\tawait this.node.rest.updatePlayer({\n\t\t\tguildId: this.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\tpaused: false,\n\t\t\t},\n\t\t})\n\t\tthis.paused = false\n\t\tthis.playing = true\n\t\tthis.manager.emit(RainlinkEvents.PlayerResume, this, this.queue.current!)\n\t\treturn this\n\t}\n\n\t/**\n   * Pause or resume a track but different method\n   * @param mode Whether to pause or not\n   * @returns RainlinkPlayer\n   */\n\tpublic async setPause(mode: boolean): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\t\tif (this.paused == mode) return this\n\t\tawait this.node.rest.updatePlayer({\n\t\t\tguildId: this.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\tpaused: mode,\n\t\t\t},\n\t\t})\n\t\tthis.paused = mode\n\t\tthis.playing = !mode\n\t\tthis.manager.emit(\n\t\t\tmode ? RainlinkEvents.PlayerPause : RainlinkEvents.PlayerResume,\n\t\t\tthis,\n      this.queue.current!\n\t\t)\n\t\treturn this\n\t}\n\n\t/**\n   * Play the previous track\n   * @returns RainlinkPlayer\n   */\n\tpublic async previous(): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\t\tconst prevoiusData = this.queue.previous\n\t\tconst current = this.queue.current\n\t\tconst index = prevoiusData.length - 1\n\t\tif (index === -1 || !current) return this\n\t\tawait this.play(prevoiusData[index])\n\t\tthis.queue.previous.splice(index, 1)\n\t\treturn this\n\t}\n\n\t/**\n   * Get all previous track\n   * @returns RainlinkTrack[]\n   */\n\tpublic getPrevious(): RainlinkTrack[] {\n\t\tthis.checkDestroyed()\n\t\treturn this.queue.previous\n\t}\n\n\t/**\n   * Skip the current track\n   * @returns RainlinkPlayer\n   */\n\tpublic async skip(): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\t\tawait this.node.rest.updatePlayer({\n\t\t\tguildId: this.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\ttrack: {\n\t\t\t\t\tencoded: null,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\treturn this\n\t}\n\n\t/**\n   * Seek to another position in track\n   * @param position Position to seek\n   * @returns RainlinkPlayer\n   */\n\tpublic async seek(position: number): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\t\tif (!this.queue.current) throw new Error('Player has no current track in it\\'s queue')\n\t\tif (!this.queue.current.isSeekable) throw new Error('The current track isn\\'t seekable')\n\n\t\tposition = Number(position)\n\n\t\tif (isNaN(position)) throw new Error('position must be a number')\n\t\tif (position < 0 || position > (this.queue.current.duration ?? 0))\n\t\t\tposition = Math.max(Math.min(position, this.queue.current.duration ?? 0), 0)\n\n\t\tawait this.node.rest.updatePlayer({\n\t\t\tguildId: this.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\tposition: position,\n\t\t\t},\n\t\t})\n\t\tthis.queue.current.position = position\n\t\treturn this\n\t}\n\n\t/**\n   * Set another volume in player\n   * @param volume Volume to cange\n   * @returns RainlinkPlayer\n   */\n\tpublic async setVolume(volume: number): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\t\tif (isNaN(volume)) throw new Error('volume must be a number')\n\t\tawait this.node.rest.updatePlayer({\n\t\t\tguildId: this.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\tvolume: volume,\n\t\t\t},\n\t\t})\n\t\tthis.volume = volume\n\t\treturn this\n\t}\n\n\t/**\n   * Set player to mute or unmute\n   * @param enable Enable or not\n   * @returns RainlinkPlayer\n   */\n\tpublic setMute(enable: boolean): RainlinkPlayer {\n\t\tthis.checkDestroyed()\n\t\tif (enable == this.mute) return this\n\t\tthis.mute = enable\n\t\tthis.voice.mute = this.mute\n\t\tthis.voice.sendVoiceUpdate()\n\t\treturn this\n\t}\n\n\t/**\n   * Stop all avtivities and reset to default\n   * @param destroy Whenever you want to destroy a player or not\n   * @returns RainlinkPlayer\n   */\n\tpublic async stop(destroy: boolean): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\n\t\tif (destroy) {\n\t\t\tawait this.destroy()\n\t\t\treturn this\n\t\t}\n\n\t\tthis.clear(false)\n\n\t\tawait this.node.rest.updatePlayer({\n\t\t\tguildId: this.guildId,\n\t\t\tplayerOptions: {\n\t\t\t\ttrack: {\n\t\t\t\t\tencoded: null,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tthis.manager.emit(RainlinkEvents.TrackEnd, this, this.queue.current!)\n\n\t\treturn this\n\t}\n\n\t/**\n   * Reset all data to default\n   * @param emitEmpty Whenever emit empty event or not\n   */\n\tpublic clear(emitEmpty: boolean): void {\n\t\tthis.loop = RainlinkLoopMode.NONE\n\t\tthis.queue.clear()\n\t\tthis.queue.current = undefined\n\t\tthis.queue.previous.length = 0\n\t\tthis.volume = this.manager.rainlinkOptions!.options!.defaultVolume ?? 100\n\t\tthis.paused = true\n\t\tthis.playing = false\n\t\tthis.track = null\n\t\tthis.data.clear()\n\t\tthis.position = 0\n\t\tif (emitEmpty) this.manager.emit(RainlinkEvents.QueueEmpty, this, this.queue)\n\t\treturn\n\t}\n\n\t/**\n   * Set player to deaf or undeaf\n   * @param enable Enable or not\n   * @returns RainlinkPlayer\n   */\n\tpublic setDeaf(enable: boolean): RainlinkPlayer {\n\t\tthis.checkDestroyed()\n\t\tif (enable == this.deaf) return this\n\t\tthis.deaf = enable\n\t\tthis.voice.deaf = this.deaf\n\t\tthis.voice.sendVoiceUpdate()\n\t\treturn this\n\t}\n\n\t/**\n   * Disconnect from the voice channel\n   * @returns RainlinkPlayer\n   */\n\tpublic disconnect(): RainlinkPlayer {\n\t\tthis.checkDestroyed()\n\t\tif (this.voice.state === VoiceConnectState.DISCONNECTED) return this\n\t\tthis.voiceId = null\n\t\tthis.deaf = false\n\t\tthis.mute = false\n\t\tthis.voice.disconnect()\n\t\tthis.pause()\n\t\tthis.state = RainlinkPlayerState.DISCONNECTED\n\t\tthis.debug('Player disconnected')\n\t\treturn this\n\t}\n\n\t/**\n   * Set text channel\n   * @param textId Text channel ID\n   * @returns RainlinkPlayer\n   */\n\tpublic setTextChannel(textId: string): RainlinkPlayer {\n\t\tthis.checkDestroyed()\n\t\tthis.textId = textId\n\t\treturn this\n\t}\n\n\t/**\n   * Set voice channel and move the player to the voice channel\n   * @param voiceId Voice channel ID\n   * @returns RainlinkPlayer\n   */\n\tpublic setVoiceChannel(voiceId: string): RainlinkPlayer {\n\t\tthis.checkDestroyed()\n\t\tthis.disconnect()\n\t\tthis.voiceId = voiceId\n\t\tthis.voice.voiceId = voiceId\n\t\tthis.voice.connect()\n\t\tthis.debugDiscord(`Player moved to voice channel ${voiceId}`)\n\t\treturn this\n\t}\n\n\t/**\n   * Send custom player update data to lavalink server\n   * @param data Data to change\n   * @returns RainlinkPlayer\n   */\n\tpublic async send(data: UpdatePlayerInfo): Promise<RainlinkPlayer> {\n\t\tthis.checkDestroyed()\n\t\tawait this.node.rest.updatePlayer(data)\n\t\treturn this\n\t}\n\n\tprotected debug(logs: string): void {\n\t\tthis.manager.emit(RainlinkEvents.Debug, `[Rainlink] / [Player @ ${this.guildId}] | ${logs}`)\n\t}\n\n\tprotected checkDestroyed(): void {\n\t\tif (this.state === RainlinkPlayerState.DESTROYED) throw new Error('Player is destroyed')\n\t}\n\n\tprotected debugDiscord(logs: string): void {\n\t\tthis.manager.emit(\n\t\t\tRainlinkEvents.Debug,\n\t\t\t`[Rainlink] / [Player @ ${this.guildId}] / [Voice] | ${logs}`\n\t\t)\n\t}\n}\n","import { ServerUpdate, StateUpdatePartial } from '../Interface/Connection'\nimport { RainlinkEvents, VoiceConnectState, VoiceState } from '../Interface/Constants'\nimport { VoiceChannelOptions } from '../Interface/Player'\nimport { Rainlink } from '../Rainlink'\nimport { EventEmitter } from 'node:events'\n\nexport class RainlinkVoice extends EventEmitter {\n\t/**\n   * Main manager class\n   */\n\tpublic manager: Rainlink\n\t/**\n   * Player's guild id\n   */\n\tpublic guildId: string\n\t/**\n   * Player's voice id\n   */\n\tpublic voiceId: string | null = null\n\t/**\n   * Connection state\n   */\n\tpublic state: VoiceConnectState = VoiceConnectState.DISCONNECTED\n\t/**\n   * Whether the player is deafened or not\n   */\n\tpublic deaf: boolean\n\t/**\n   * Whether the player is muted or not\n   */\n\tpublic mute: boolean\n\t/**\n   * ID of the Shard that contains the guild that contains the connected voice channel\n   */\n\tpublic shardId: number\n\t/**\n   * ID of the last voiceId connected to\n   */\n\tpublic lastvoiceId: string | null = null\n\t/**\n   * Region of connected voice channel\n   */\n\tpublic region: string | null = null\n\t/**\n   * Last region of the connected voice channel\n   */\n\tpublic lastRegion: string | null = null\n\t/**\n   * Cached serverUpdate event from Lavalink\n   */\n\tpublic serverUpdate: ServerUpdate | null = null\n\t/**\n   * ID of current session\n   */\n\tpublic sessionId: string | null = null\n\t/**\n   * Voice Options\n   */\n\tpublic options: VoiceChannelOptions\n\n\t/**\n   * Rainlink voice handler class\n   * @param manager Rainlink manager\n   * @param voiceOptions\n   */\n\tconstructor(manager: Rainlink, voiceOptions: VoiceChannelOptions) {\n\t\tsuper()\n\t\tthis.options = voiceOptions\n\t\tthis.manager = manager\n\t\tthis.guildId = this.options.guildId\n\t\tthis.voiceId = this.options.voiceId\n\t\tthis.deaf = this.options.deaf ?? false\n\t\tthis.mute = this.options.mute ?? false\n\t\tthis.shardId = this.options.shardId\n\t}\n\n\t/**\n   * Connect from the voice channel\n   * @returns RainlinkPlayer\n   */\n\tpublic async connect(): Promise<RainlinkVoice> {\n\t\t// if (this.player.state === RainlinkPlayerState.CONNECTED || !this.voiceId) return this\n\t\tif (this.state === VoiceConnectState.CONNECTING || this.state === VoiceConnectState.CONNECTED)\n\t\t\treturn this\n\t\tthis.state = VoiceConnectState.CONNECTING\n\t\tthis.sendVoiceUpdate()\n\t\tthis.debugDiscord('Requesting Connection')\n\t\tconst controller = new AbortController()\n\t\tconst timeout = setTimeout(\n\t\t\t() => controller.abort(),\n      this.manager.rainlinkOptions.options!.voiceConnectionTimeout\n\t\t)\n\t\ttry {\n\t\t\tconst [status] = await RainlinkVoice.once(this, 'connectionUpdate', {\n\t\t\t\tsignal: controller.signal,\n\t\t\t})\n\t\t\tif (status !== VoiceState.SESSION_READY) {\n\t\t\t\tswitch (status) {\n\t\t\t\tcase VoiceState.SESSION_ID_MISSING:\n\t\t\t\t\tthrow new Error('The voice connection is not established due to missing session id')\n\t\t\t\tcase VoiceState.SESSION_ENDPOINT_MISSING:\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'The voice connection is not established due to missing connection endpoint'\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.state = VoiceConnectState.CONNECTED\n\t\t} catch (error: any) {\n\t\t\tthis.debugDiscord('Request Connection Failed')\n\t\t\tif (error.name === 'AbortError')\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`The voice connection is not established in ${this.manager.rainlinkOptions.options!.voiceConnectionTimeout}ms`\n\t\t\t\t)\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tclearTimeout(timeout)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n   * Send voice data to discord\n   * @internal\n   */\n\tpublic sendVoiceUpdate() {\n\t\tthis.sendDiscord({\n\t\t\tguild_id: this.guildId,\n\t\t\tchannel_id: this.voiceId,\n\t\t\tself_deaf: this.deaf,\n\t\t\tself_mute: this.mute,\n\t\t})\n\t}\n\n\t/**\n   * Send data to Discord\n   * @param data The data to send\n   * @internal\n   */\n\tpublic sendDiscord(data: any): void {\n\t\tthis.manager.library.sendPacket(this.shardId, { op: 4, d: data }, false)\n\t}\n\n\t/**\n   * Sets the server update data for this connection\n   * @internal\n   */\n\tpublic setServerUpdate(data: ServerUpdate): void {\n\t\tif (!data.endpoint) {\n\t\t\tthis.emit('connectionUpdate', VoiceState.SESSION_ENDPOINT_MISSING)\n\t\t\treturn\n\t\t}\n\t\tif (!this.sessionId) {\n\t\t\tthis.emit('connectionUpdate', VoiceState.SESSION_ID_MISSING)\n\t\t\treturn\n\t\t}\n\n\t\tthis.lastRegion = this.region?.repeat(1) || null\n\t\tthis.region = data.endpoint.split('.').shift()?.replace(/[0-9]/g, '') || null\n\n\t\tif (this.region && this.lastRegion !== this.region) {\n\t\t\tthis.debugDiscord(\n\t\t\t\t`Voice Region Moved | Old Region: ${this.lastRegion} New Region: ${this.region}`\n\t\t\t)\n\t\t}\n\n\t\tthis.serverUpdate = data\n\t\tthis.emit('connectionUpdate', VoiceState.SESSION_READY)\n\t\tthis.debugDiscord(`Server Update Received | Server: ${this.region}`)\n\t}\n\n\t/**\n   * Update Session ID, Channel ID, Deafen status and Mute status of this instance\n   * @internal\n   */\n\tpublic setStateUpdate({\n\t\tsession_id,\n\t\tchannel_id,\n\t\tself_deaf,\n\t\tself_mute,\n\t}: StateUpdatePartial): void {\n\t\tthis.lastvoiceId = this.voiceId?.repeat(1) || null\n\t\tthis.voiceId = channel_id || null\n\n\t\tif (this.voiceId && this.lastvoiceId !== this.voiceId) {\n\t\t\tthis.debugDiscord(`Channel Moved | Old Channel: ${this.voiceId}`)\n\t\t}\n\n\t\tif (!this.voiceId) {\n\t\t\tthis.state = VoiceConnectState.DISCONNECTED\n\t\t\tthis.debugDiscord('Channel Disconnected')\n\t\t}\n\n\t\tthis.deaf = self_deaf\n\t\tthis.mute = self_mute\n\t\tthis.sessionId = session_id || null\n\t\tthis.debugDiscord(`State Update Received | Channel: ${this.voiceId} Session ID: ${session_id}`)\n\t}\n\n\t/**\n   * Disconnect from the voice channel\n   * @returns RainlinkPlayer\n   */\n\tpublic disconnect() {\n\t\tthis.voiceId = null\n\t\tthis.deaf = false\n\t\tthis.mute = false\n\t\tthis.removeAllListeners()\n\t\tthis.sendVoiceUpdate()\n\t\tthis.state = VoiceConnectState.DISCONNECTED\n\t\tthis.debugDiscord('Voice disconnected')\n\t}\n\n\tprotected debugDiscord(logs: string): void {\n\t\tthis.manager.emit(\n\t\t\tRainlinkEvents.Debug,\n\t\t\t`[Rainlink] / [Player @ ${this.guildId}] / [Voice] | ${logs}`\n\t\t)\n\t}\n}\n","import { RainlinkEvents, RainlinkPlayerState, VoiceState } from '../Interface/Constants'\nimport { VoiceChannelOptions } from '../Interface/Player'\nimport { RainlinkPlayer } from '../Player/RainlinkPlayer'\nimport { RainlinkVoice } from '../Player/RainlinkVoice'\nimport { Rainlink } from '../Rainlink'\nimport { RainlinkDatabase } from '../Utilities/RainlinkDatabase'\n\n/** The node manager class for managing all active players */\nexport class RainlinkPlayerManager extends RainlinkDatabase<RainlinkPlayer> {\n\t/** The rainlink manager */\n\tpublic manager: Rainlink\n\n\t/**\n   * The main class for handling lavalink players\n   * @param manager The rainlink manager\n   */\n\tconstructor(manager: Rainlink) {\n\t\tsuper()\n\t\tthis.manager = manager\n\t}\n\n\t/**\n   * Create a player\n   * @returns RainlinkPlayer\n   * @internal\n   */\n\tasync create(options: VoiceChannelOptions): Promise<RainlinkPlayer> {\n\t\t// Check player exist\n\t\tconst createdPlayer = this.get(options.guildId)\n\t\tif (createdPlayer) return createdPlayer\n\n\t\t// Check voice\n\t\tconst getCurrVoice = this.manager.voices.get(options.guildId)\n\t\tif (getCurrVoice) {\n\t\t\tgetCurrVoice.disconnect()\n\t\t\tthis.manager.voices.delete(options.guildId)\n\t\t}\n\n\t\t// Create voice handler\n\t\tconst voiceHandler = new RainlinkVoice(this.manager, options)\n\t\tthis.manager.voices.set(options.guildId, voiceHandler)\n\t\t// eslint-disable-next-line no-useless-catch\n\t\ttry {\n\t\t\tawait voiceHandler.connect()\n\t\t} catch (err) {\n\t\t\tthrow err\n\t\t}\n\n\t\t// Get node\n\t\tlet getCustomNode = this.manager.nodes.get(String(options.nodeName ? options.nodeName : ''))\n\t\tconst reigonedNode = this.manager.nodes.full\n\t\t\t.filter(([, node]) => node.options.region)\n\t\t\t.map(([, node]) => node)\n\t\tif (!getCustomNode && voiceHandler.region && reigonedNode.length !== 0) {\n\t\t\tconst node = reigonedNode.filter((node) => node.options.region == voiceHandler.region)\n\t\t\tif (node) getCustomNode = await this.manager.nodes.getLeastUsed(node)\n\t\t}\n\t\tconst node = getCustomNode ? getCustomNode : await this.manager.nodes.getLeastUsed()\n\t\tif (!node) throw new Error('Can\\'t find any nodes to connect on')\n\n\t\t// Create player\n\t\tconst customPlayer =\n      this.manager.rainlinkOptions.options!.structures &&\n      this.manager.rainlinkOptions.options!.structures.player\n\t\tconst player = customPlayer\n\t\t\t? new customPlayer(this.manager, voiceHandler, node)\n\t\t\t: new RainlinkPlayer(this.manager, voiceHandler, node)\n\t\tthis.set(player.guildId, player)\n\n\t\t// Send server update\n\t\tconst onUpdate = (state: VoiceState) => {\n\t\t\tif (state !== VoiceState.SESSION_READY) return\n\t\t\tplayer.sendServerUpdate()\n\t\t}\n\t\tawait player.sendServerUpdate()\n\t\tvoiceHandler.on('connectionUpdate', onUpdate)\n\n\t\t// Finishing up\n\t\tplayer.state = RainlinkPlayerState.CONNECTED\n\t\tthis.debug('Player created at ' + options.guildId)\n\t\tthis.manager.emit(RainlinkEvents.PlayerCreate, player)\n\t\treturn player\n\t}\n\n\t/**\n   * Destroy a player\n   * @returns The destroyed / disconnected player or undefined if none\n   * @internal\n   */\n\tpublic async destroy(guildId: string = ''): Promise<void> {\n\t\tconst player = this.get(guildId)\n\t\tif (player) await player.destroy()\n\t}\n\n\tprotected debug(logs: string) {\n\t\tthis.manager.emit(RainlinkEvents.Debug, `[Rainlink] / [PlayerManager] | ${logs}`)\n\t}\n}\n","// Modded from: https://github.com/shipgirlproject/Shoukaku/blob/396aa531096eda327ade0f473f9807576e9ae9df/src/connectors/Connector.ts\n// Special thanks to shipgirlproject team!\n\nimport { RainlinkNodeOptions } from '../Interface/Manager'\nimport { Rainlink } from '../Rainlink'\nimport { LavalinkLoadType } from '../Interface/Constants'\nimport { RainlinkNode } from './RainlinkNode'\nimport {\n\tLavalinkPlayer,\n\tLavalinkResponse,\n\tLavalinkStats,\n\tRainlinkRequesterOptions,\n\tRawTrack,\n\tRoutePlanner,\n\tUpdatePlayerInfo,\n} from '../Interface/Rest'\nimport { NodeInfo } from '../Interface/Node'\n\n/**\n * The rest class for get and calling\n * from audio sending node/server REST API\n */\nexport class RainlinkRest {\n\t/** The rainlink manager */\n\tpublic manager: Rainlink\n\tprotected options: RainlinkNodeOptions\n\t/** The node manager (RainlinkNode class) */\n\tpublic nodeManager: RainlinkNode\n\tprotected sessionId: string | null\n\n\t/**\n   * The lavalink rest server handler class\n   * @param manager The rainlink manager\n   * @param options The rainlink node options, from RainlinkNodeOptions interface\n   * @param nodeManager The rainlink's lavalink server handler class\n   */\n\tconstructor(manager: Rainlink, options: RainlinkNodeOptions, nodeManager: RainlinkNode) {\n\t\tthis.manager = manager\n\t\tthis.options = options\n\t\tthis.nodeManager = nodeManager\n\t\tthis.sessionId = this.nodeManager.driver.sessionId ? this.nodeManager.driver.sessionId : ''\n\t}\n\n\t/**\n   * Gets all the player with the specified sessionId\n   * @returns Promise that resolves to an array of Lavalink players\n   */\n\tpublic async getPlayers(): Promise<LavalinkPlayer[]> {\n\t\tconst options: RainlinkRequesterOptions = {\n\t\t\tpath: `/sessions/${this.sessionId}/players`,\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t}\n\t\treturn (await this.nodeManager.driver.requester<LavalinkPlayer[]>(options)) ?? []\n\t}\n\n\t/**\n   * Gets current lavalink status\n   * @returns Promise that resolves to an object of current lavalink status\n   */\n\tpublic async getStatus(): Promise<LavalinkStats | undefined> {\n\t\tconst options: RainlinkRequesterOptions = {\n\t\t\tpath: '/stats',\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t}\n\t\treturn await this.nodeManager.driver.requester<LavalinkStats>(options)\n\t}\n\n\t/**\n   * Decode a single track from \"encoded\" properties\n   * @returns Promise that resolves to an object of raw track\n   */\n\tpublic async decodeTrack(base64track: string): Promise<RawTrack | undefined> {\n\t\tconst options: RainlinkRequesterOptions = {\n\t\t\tpath: '/decodetrack',\n\t\t\tparams: {\n\t\t\t\tencodedTrack: base64track,\n\t\t\t},\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t}\n\t\treturn await this.nodeManager.driver.requester<RawTrack>(options)\n\t}\n\n\t/**\n   * Updates a Lavalink player\n   * @returns Promise that resolves to a Lavalink player\n   */\n\tpublic async updatePlayer(data: UpdatePlayerInfo): Promise<void> {\n\t\tconst options: RainlinkRequesterOptions = {\n\t\t\tpath: `/sessions/${this.sessionId}/players/${data.guildId}`,\n\t\t\tparams: { noReplace: data.noReplace?.toString() || 'false' },\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\tmethod: 'PATCH',\n\t\t\tdata: data.playerOptions as Record<string, unknown>,\n\t\t\trawReqData: data,\n\t\t}\n\t\tawait this.nodeManager.driver.requester<LavalinkPlayer>(options)\n\t}\n\n\t/**\n   * Destroy a Lavalink player\n   * @returns Promise that resolves to a Lavalink player\n   */\n\tpublic async destroyPlayer(guildId: string): Promise<void> {\n\t\tconst options: RainlinkRequesterOptions = {\n\t\t\tpath: `/sessions/${this.sessionId}/players/${guildId}`,\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\tmethod: 'DELETE',\n\t\t}\n\t\tawait this.nodeManager.driver.requester(options)\n\t}\n\n\t/**\n   * A track resolver function to get track from lavalink\n   * @returns LavalinkResponse\n   */\n\tpublic async resolver(data: string): Promise<LavalinkResponse | undefined> {\n\t\tconst options: RainlinkRequesterOptions = {\n\t\t\tpath: '/loadtracks',\n\t\t\tparams: { identifier: data },\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\tmethod: 'GET',\n\t\t}\n\n\t\tconst resData = await this.nodeManager.driver.requester<LavalinkResponse>(options)\n\n\t\tif (!resData) {\n\t\t\treturn {\n\t\t\t\tloadType: LavalinkLoadType.EMPTY,\n\t\t\t\tdata: {},\n\t\t\t}\n\t\t} else return resData\n\t}\n\n\t/**\n   * Get routeplanner status from Lavalink\n   * @returns Promise that resolves to a routeplanner response\n   */\n\tpublic async getRoutePlannerStatus(): Promise<RoutePlanner | undefined> {\n\t\tconst options = {\n\t\t\tpath: '/routeplanner/status',\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t}\n\t\treturn await this.nodeManager.driver.requester<RoutePlanner>(options)\n\t}\n\n\t/**\n   * Release blacklisted IP address into pool of IPs\n   * @param address IP address\n   */\n\tpublic async unmarkFailedAddress(address: string): Promise<void> {\n\t\tconst options = {\n\t\t\tpath: '/routeplanner/free/address',\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\tdata: { address },\n\t\t}\n\t\tawait this.nodeManager.driver.requester(options)\n\t}\n\n\t/**\n   * Get Lavalink info\n   */\n\tpublic async getInfo(): Promise<NodeInfo | undefined> {\n\t\tconst options = {\n\t\t\tpath: '/info',\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t}\n\t\treturn await this.nodeManager.driver.requester(options)\n\t}\n\n\tprotected testJSON(text: string) {\n\t\tif (typeof text !== 'string') {\n\t\t\treturn false\n\t\t}\n\t\ttry {\n\t\t\tJSON.parse(text)\n\t\t\treturn true\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t}\n}\n","import { RainlinkNodeOptions } from '../Interface/Manager'\nimport { Rainlink } from '../Rainlink'\nimport { RainlinkConnectState, RainlinkEvents } from '../Interface/Constants'\nimport { RainlinkRest } from './RainlinkRest'\nimport { setTimeout } from 'node:timers/promises'\nimport { RainlinkPlayerEvents } from './RainlinkPlayerEvents'\nimport { LavalinkEventsEnum } from '../Interface/LavalinkEvents'\nimport { LavalinkNodeStatsResponse, NodeStats } from '../Interface/Node'\nimport { AbstractDriver } from '../Drivers/AbstractDriver'\n// Drivers\nimport { Lavalink4 } from '../Drivers/Lavalink4'\nimport { RainlinkWebsocket } from '../Utilities/RainlinkWebsocket'\n\n/** The node manager class for managing current audio sending server/node */\nexport class RainlinkNode {\n\t/** The rainlink manager */\n\tpublic manager: Rainlink\n\t/** The rainlink node options */\n\tpublic options: RainlinkNodeOptions\n\t/** The rainlink rest manager */\n\tpublic rest: RainlinkRest\n\t/** The lavalink server online status */\n\tpublic online: boolean = false\n\tprotected retryCounter = 0\n\t/** The lavalink server connect state */\n\tpublic state: RainlinkConnectState = RainlinkConnectState.Closed\n\t/** The lavalink server all status */\n\tpublic stats: NodeStats\n\tprotected sudoDisconnect = false\n\tprotected wsEvent: RainlinkPlayerEvents\n\t/** Driver for connect to current version of Nodelink/Lavalink */\n\tpublic driver: AbstractDriver\n\n\t/**\n   * The lavalink server handler class\n   * @param manager The rainlink manager\n   * @param options The lavalink server options\n   */\n\tconstructor(manager: Rainlink, options: RainlinkNodeOptions) {\n\t\tthis.manager = manager\n\t\tthis.options = options\n\t\tconst getDriver = this.manager.drivers.filter(\n\t\t\t(driver) => driver.prototype.id === options.driver\n\t\t)\n\t\tif (!getDriver || getDriver.length == 0) {\n\t\t\tthis.debug('No driver was found, using lavalink v4 driver instead')\n\t\t\tthis.driver = new Lavalink4(manager, this)\n\t\t} else {\n\t\t\tthis.debug(`Now using driver: ${getDriver[0].prototype.id}`)\n\t\t\tthis.driver = new getDriver[0](manager, this)\n\t\t}\n\t\tconst customRest =\n      this.manager.rainlinkOptions.options!.structures &&\n      this.manager.rainlinkOptions.options!.structures.rest\n\t\tthis.rest = customRest\n\t\t\t? new customRest(manager, options, this)\n\t\t\t: new RainlinkRest(manager, options, this)\n\t\tthis.wsEvent = new RainlinkPlayerEvents()\n\t\tthis.stats = {\n\t\t\tplayers: 0,\n\t\t\tplayingPlayers: 0,\n\t\t\tuptime: 0,\n\t\t\tmemory: {\n\t\t\t\tfree: 0,\n\t\t\t\tused: 0,\n\t\t\t\tallocated: 0,\n\t\t\t\treservable: 0,\n\t\t\t},\n\t\t\tcpu: {\n\t\t\t\tcores: 0,\n\t\t\t\tsystemLoad: 0,\n\t\t\t\tlavalinkLoad: 0,\n\t\t\t},\n\t\t\tframeStats: {\n\t\t\t\tsent: 0,\n\t\t\t\tnulled: 0,\n\t\t\t\tdeficit: 0,\n\t\t\t},\n\t\t}\n\t}\n\n\t/** Connect this lavalink server */\n\tpublic connect(): RainlinkWebsocket {\n\t\treturn this.driver.connect()\n\t}\n\n\t/** @ignore */\n\tpublic wsOpenEvent() {\n\t\tthis.clean(true)\n\t\tthis.state = RainlinkConnectState.Connected\n\t\tthis.debug(`Node connected! URL: ${this.driver.wsUrl}`)\n\t\tthis.manager.emit(RainlinkEvents.NodeConnect, this)\n\t}\n\n\t/** @ignore */\n\tpublic wsMessageEvent(data: Record<string, any>) {\n\t\tswitch (data.op) {\n\t\tcase LavalinkEventsEnum.Ready: {\n\t\t\tconst isResume = this.manager.rainlinkOptions.options!.resume\n\t\t\tconst timeout = this.manager.rainlinkOptions.options?.resumeTimeout\n\t\t\tthis.driver.sessionId = data.sessionId\n\t\t\tconst customRest =\n          this.manager.rainlinkOptions.options!.structures &&\n          this.manager.rainlinkOptions.options!.structures.rest\n\t\t\tthis.rest = customRest\n\t\t\t\t? new customRest(this.manager, this.options, this)\n\t\t\t\t: new RainlinkRest(this.manager, this.options, this)\n\t\t\tif (isResume && timeout) {\n\t\t\t\tthis.driver.updateSession(data.sessionId, isResume, timeout)\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase LavalinkEventsEnum.Event: {\n\t\t\tthis.wsEvent.initial(data, this.manager)\n\t\t\tbreak\n\t\t}\n\t\tcase LavalinkEventsEnum.PlayerUpdate: {\n\t\t\tthis.wsEvent.initial(data, this.manager)\n\t\t\tbreak\n\t\t}\n\t\tcase LavalinkEventsEnum.Status: {\n\t\t\tthis.stats = this.updateStatusData(data as LavalinkNodeStatsResponse)\n\t\t\tbreak\n\t\t}\n\t\t}\n\t}\n\n\t/** @ignore */\n\tpublic wsErrorEvent(logs: Error) {\n\t\tthis.debug(`Node errored! URL: ${this.driver.wsUrl}`)\n\t\tthis.manager.emit(RainlinkEvents.NodeError, this, logs)\n\t}\n\n\t/** @ignore */\n\tpublic async wsCloseEvent(code: number, reason: Buffer | string) {\n\t\tthis.online = false\n\t\tthis.state = RainlinkConnectState.Disconnected\n\t\tthis.debug(`Node disconnected! URL: ${this.driver.wsUrl}`)\n\t\tthis.manager.emit(RainlinkEvents.NodeDisconnect, this, code, reason)\n\t\tif (\n\t\t\t!this.sudoDisconnect &&\n      this.retryCounter !== this.manager.rainlinkOptions.options!.retryCount\n\t\t) {\n\t\t\tawait setTimeout(this.manager.rainlinkOptions.options!.retryTimeout)\n\t\t\tthis.retryCounter = this.retryCounter + 1\n\t\t\tthis.reconnect(true)\n\t\t\treturn\n\t\t}\n\t\tthis.nodeClosed()\n\t\treturn\n\t}\n\n\tprotected nodeClosed() {\n\t\tthis.manager.emit(RainlinkEvents.NodeClosed, this)\n\t\tthis.debug(`Node closed! URL: ${this.driver.wsUrl}`)\n\t\tthis.clean()\n\t}\n\n\tprotected updateStatusData(data: LavalinkNodeStatsResponse): NodeStats {\n\t\treturn {\n\t\t\tplayers: data.players ?? this.stats.players,\n\t\t\tplayingPlayers: data.playingPlayers ?? this.stats.playingPlayers,\n\t\t\tuptime: data.uptime ?? this.stats.uptime,\n\t\t\tmemory: data.memory ?? this.stats.memory,\n\t\t\tcpu: data.cpu ?? this.stats.cpu,\n\t\t\tframeStats: data.frameStats ?? this.stats.frameStats,\n\t\t}\n\t}\n\n\t/** Disconnect this lavalink server */\n\tpublic disconnect() {\n\t\tthis.sudoDisconnect = true\n\t\tthis.driver.wsClose()\n\t}\n\n\t/** Reconnect back to this lavalink server */\n\tpublic reconnect(noClean: boolean) {\n\t\tif (!noClean) this.clean()\n\t\tthis.debug(`Node is trying to reconnect! URL: ${this.driver.wsUrl}`)\n\t\tthis.manager?.emit(RainlinkEvents.NodeReconnect, this)\n\t\tthis.driver.connect()\n\t}\n\n\t/** Clean all the lavalink server state and set to default value */\n\tpublic clean(online: boolean = false) {\n\t\tthis.sudoDisconnect = false\n\t\tthis.retryCounter = 0\n\t\tthis.online = online\n\t\tthis.state = RainlinkConnectState.Closed\n\t}\n\n\tprotected debug(logs: string) {\n\t\tthis.manager.emit(RainlinkEvents.Debug, `[Rainlink] / [Node @ ${this.options.name}] | ${logs}`)\n\t}\n}\n","import { RainlinkEvents, RainlinkLoopMode, RainlinkPlayerState } from '../Interface/Constants'\nimport { LavalinkEventsEnum } from '../Interface/LavalinkEvents'\nimport { Rainlink } from '../Rainlink'\n\nexport class RainlinkPlayerEvents {\n\tprotected readonly methods: Record<string, (manager: Rainlink, data: Record<string, any>) => void>\n\n\tconstructor() {\n\t\tthis.methods = {\n\t\t\tTrackStartEvent: this.TrackStartEvent,\n\t\t\tTrackEndEvent: this.TrackEndEvent,\n\t\t\tTrackExceptionEvent: this.TrackExceptionEvent,\n\t\t\tTrackStuckEvent: this.TrackStuckEvent,\n\t\t\tWebSocketClosedEvent: this.WebSocketClosedEvent,\n\t\t}\n\t}\n\n\tpublic initial(data: Record<string, any>, manager: Rainlink) {\n\t\tif (data.op == LavalinkEventsEnum.PlayerUpdate) return this.PlayerUpdate(manager, data)\n\t\tconst _function = this.methods[data.type]\n\t\tif (_function !== undefined) _function(manager, data)\n\t}\n\n\tprotected TrackStartEvent(manager: Rainlink, data: Record<string, any>) {\n\t\tconst player = manager.players.get(data.guildId)\n\t\tif (player) {\n\t\t\tplayer.playing = true\n\t\t\tplayer.paused = false\n\t\t\tmanager.emit(RainlinkEvents.TrackStart, player, player.queue.current!)\n\t\t\tmanager.emit(\n\t\t\t\tRainlinkEvents.Debug,\n\t\t\t\t`[Rainlink] / [Player @ ${data.guildId}] / [Events] / [Start] | ` + JSON.stringify(data)\n\t\t\t)\n\t\t}\n\t\treturn\n\t}\n\n\tprotected TrackEndEvent(manager: Rainlink, data: Record<string, any>) {\n\t\tconst player = manager.players.get(data.guildId)\n\t\tif (player) {\n\t\t\t// This event emits STOPPED reason when destroying, so return to prevent double emit\n\t\t\tif (player.state === RainlinkPlayerState.DESTROYED)\n\t\t\t\treturn manager.emit(\n\t\t\t\t\tRainlinkEvents.Debug,\n\t\t\t\t\t`[Rainlink] / [Player @ ${data.guildId}] / [Events] / [End] | Player ${player.guildId} destroyed from end event`\n\t\t\t\t)\n\n\t\t\tmanager.emit(\n\t\t\t\tRainlinkEvents.Debug,\n\t\t\t\t`[Rainlink] / [Player @ ${data.guildId}] / [Events] / [End] | ` +\n          `Tracks: ${player.queue.length} ` +\n          JSON.stringify(data)\n\t\t\t)\n\n\t\t\tplayer.playing = false\n\t\t\tplayer.paused = true\n\n\t\t\tif (data.reason === 'replaced') {\n\t\t\t\treturn manager.emit(RainlinkEvents.TrackEnd, player, player.queue.current!)\n\t\t\t}\n\t\t\tif (['loadFailed', 'cleanup'].includes(data.reason)) {\n\t\t\t\tif (player.queue.current) player.queue.previous.push(player.queue.current)\n\t\t\t\tif (!player.queue.length && !player.sudoDestroy)\n\t\t\t\t\treturn manager.emit(RainlinkEvents.QueueEmpty, player, player.queue)\n\t\t\t\tmanager.emit(RainlinkEvents.QueueEmpty, player, player.queue)\n\t\t\t\tplayer.queue.current = null\n\t\t\t\treturn player.play()\n\t\t\t}\n\n\t\t\tif (player.loop == RainlinkLoopMode.SONG && player.queue.current)\n\t\t\t\tplayer.queue.unshift(player.queue.current)\n\t\t\tif (player.loop == RainlinkLoopMode.QUEUE && player.queue.current)\n\t\t\t\tplayer.queue.push(player.queue.current)\n\n\t\t\tif (player.queue.current) player.queue.previous.push(player.queue.current)\n\t\t\tconst currentSong = player.queue.current\n\t\t\tplayer.queue.current = null\n\n\t\t\tif (player.queue.length) {\n\t\t\t\tmanager.emit(RainlinkEvents.TrackEnd, player, currentSong!)\n\t\t\t} else if (!player.queue.length && !player.sudoDestroy) {\n\t\t\t\treturn manager.emit(RainlinkEvents.QueueEmpty, player, player.queue)\n\t\t\t} else return\n\n\t\t\treturn player.play()\n\t\t}\n\t\treturn\n\t}\n\n\tprotected TrackExceptionEvent(manager: Rainlink, data: Record<string, any>) {\n\t\tconst player = manager.players.get(data.guildId)\n\t\tif (player) {\n\t\t\tplayer.playing = false\n\t\t\tplayer.paused = true\n\t\t\tmanager.emit(RainlinkEvents.PlayerException, player, data)\n\t\t\tmanager.emit(\n\t\t\t\tRainlinkEvents.Debug,\n\t\t\t\t`[Rainlink] / [Player @ ${data.guildId}] / [Events] / [Exception] | ` + JSON.stringify(data)\n\t\t\t)\n\t\t}\n\t\treturn\n\t}\n\n\tprotected TrackStuckEvent(manager: Rainlink, data: Record<string, any>) {\n\t\tconst player = manager.players.get(data.guildId)\n\t\tif (player) {\n\t\t\tplayer.playing = false\n\t\t\tplayer.paused = true\n\t\t\tmanager.emit(RainlinkEvents.TrackStuck, player, data)\n\t\t\tmanager.emit(\n\t\t\t\tRainlinkEvents.Debug,\n\t\t\t\t`[Rainlink] / [Player @ ${data.guildId}] / [Events] / [Stuck] | ` + JSON.stringify(data)\n\t\t\t)\n\t\t}\n\t\treturn\n\t}\n\n\tprotected WebSocketClosedEvent(manager: Rainlink, data: Record<string, any>) {\n\t\tconst player = manager.players.get(data.guildId)\n\t\tif (player) {\n\t\t\tplayer.playing = false\n\t\t\tplayer.paused = true\n\t\t\tmanager.emit(RainlinkEvents.PlayerWebsocketClosed, player, data)\n\t\t\tmanager.emit(\n\t\t\t\tRainlinkEvents.Debug,\n\t\t\t\t`[Rainlink] / [Player @ ${data.guildId}] / [Events] / [WebsocketClosed] | ` +\n          JSON.stringify(data)\n\t\t\t)\n\t\t}\n\t\treturn\n\t}\n\n\tprotected PlayerUpdate(manager: Rainlink, data: Record<string, any>) {\n\t\tconst player = manager.players.get(data.guildId)\n\t\tif (player) {\n\t\t\tplayer.position = Number(data.state.position)\n\t\t\tmanager.emit(\n\t\t\t\tRainlinkEvents.Debug,\n\t\t\t\t`[Rainlink] / [Player @ ${data.guildId}] / [Events] / [Updated] | ` + JSON.stringify(data)\n\t\t\t)\n\t\t\tmanager.emit(RainlinkEvents.PlayerUpdate, player, data)\n\t\t}\n\t\treturn\n\t}\n}\n","import { RainlinkRequesterOptions } from '../Interface/Rest'\nimport { RainlinkNode } from '../Node/RainlinkNode'\nimport { RainlinkWebsocket } from '../Utilities/RainlinkWebsocket'\nimport { Rainlink } from '../Rainlink'\nimport { RainlinkFunctions } from '../Utilities/RainlinkFunctions'\n\n/**\n * The abstract class for developing driver\n * to use another audio sending server.\n */\nexport abstract class AbstractDriver {\n  /**  The id for the driver*/\n  abstract id: string\n  /** Ws url for dealing connection to lavalink/nodelink server */\n  abstract wsUrl: string\n  /** Http url for dealing rest request to lavalink/nodelink server */\n  abstract httpUrl: string\n  /** The lavalink server season id to resume */\n  abstract sessionId: string | null\n  /** All function to extend support driver on RainlinkPlayer class */\n  abstract playerFunctions: RainlinkFunctions\n  /** All function to extend support driver on Rainlink class */\n  abstract functions: RainlinkFunctions\n  /** Rainlink manager class */\n  abstract manager: Rainlink\n  /** Rainlink reuqested lavalink/nodelink server */\n  abstract node: RainlinkNode\n\n  /**\n   * Connect to lavalink/nodelink server\n   * @returns WebSocket\n   */\n  abstract connect(): RainlinkWebsocket\n  /**\n   * Fetch function for dealing rest request to lavalink/nodelink server\n   * @returns Promise<D | undefined>\n   */\n  abstract requester<D = any>(options: RainlinkRequesterOptions): Promise<D | undefined>\n  /**\n   * Close the lavalink/nodelink server\n   * @returns void\n   */\n  abstract wsClose(): void\n  /**\n   * Update a season to resume able or not\n   * @returns void\n   */\n  abstract updateSession(sessionId: string, mode: boolean, timeout: number): Promise<void>\n}\n","import { Rainlink } from '../Rainlink'\nimport { metadata } from '../metadata'\nimport { RainlinkEvents } from '../Interface/Constants'\nimport { RainlinkRequesterOptions } from '../Interface/Rest'\nimport { RainlinkNode } from '../Node/RainlinkNode'\nimport { AbstractDriver } from './AbstractDriver'\nimport util from 'node:util'\nimport { RainlinkWebsocket } from '../Utilities/RainlinkWebsocket'\nimport { LavalinkDecoder } from '../Utilities/LavalinkDecoder'\nimport { RainlinkFunctions } from '../Utilities/RainlinkFunctions'\n\nexport class Lavalink4 extends AbstractDriver {\n\tpublic id: string = 'lavalink/v4/koinu'\n\tpublic wsUrl: string = ''\n\tpublic httpUrl: string = ''\n\tpublic sessionId: string | null\n\tpublic playerFunctions: RainlinkFunctions\n\tpublic functions: RainlinkFunctions\n\tprotected wsClient?: RainlinkWebsocket\n\n\tconstructor(\n    public manager: Rainlink,\n    public node: RainlinkNode\n\t) {\n\t\tsuper()\n\t\tthis.playerFunctions = new RainlinkFunctions()\n\t\tthis.functions = new RainlinkFunctions()\n\t\tthis.sessionId = null\n\t\tthis.wsUrl = `${this.node.options.secure ? 'wss' : 'ws'}://${this.node.options.host}:${this.node.options.port}/v4/websocket`\n\t\tthis.httpUrl = `${this.node.options.secure ? 'https://' : 'http://'}${this.node.options.host}:${this.node.options.port}/v4`\n\t\tthis.functions.set('decode', this.decode)\n\t}\n\n\tpublic connect(): RainlinkWebsocket {\n\t\tconst isResume = this.manager.rainlinkOptions.options!.resume\n\n\t\tconst headers: Record<string, string | number> = {\n\t\t\tAuthorization: this.node.options.auth,\n\t\t\t'user-id': String(this.manager.id),\n\t\t\t'client-name': `${metadata.name}/${metadata.version} (${metadata.github})`,\n\t\t\t'user-agent': this.manager.rainlinkOptions.options!.userAgent!,\n\t\t\t'num-shards': String(this.manager.shardCount),\n\t\t}\n\t\tif (this.sessionId !== null && isResume) headers['session-id'] = this.sessionId\n\n\t\tconst ws = new RainlinkWebsocket(this.wsUrl, {\n\t\t\tlegacy: this.node.options.legacyWS,\n\t\t\theaders,\n\t\t})\n\n\t\tws.on('open', () => {\n\t\t\tthis.node.wsOpenEvent()\n\t\t})\n\t\tws.on('message', (data) => this.wsMessageEvent(data))\n\t\tws.on('error', (err) => this.node.wsErrorEvent(err))\n\t\tws.on('close', (code, reason) => {\n\t\t\tthis.node.wsCloseEvent(code, reason)\n\t\t\tws.removeAllListeners()\n\t\t})\n\t\tthis.wsClient = ws\n\t\treturn ws\n\t}\n\n\tpublic async requester<D = any>(options: RainlinkRequesterOptions): Promise<D | undefined> {\n\t\tif (options.path.includes('/sessions') && this.sessionId == null)\n\t\t\tthrow new Error('sessionId not initalized! Please wait for lavalink get connected!')\n\t\tconst url = new URL(`${this.httpUrl}${options.path}`)\n\t\tif (options.params) url.search = new URLSearchParams(options.params).toString()\n\n\t\tif (options.data) {\n\t\t\toptions.body = JSON.stringify(options.data)\n\t\t}\n\n\t\tconst lavalinkHeaders = {\n\t\t\tauthorization: this.node.options.auth,\n\t\t\t'user-agent': this.manager.rainlinkOptions.options!.userAgent!,\n\t\t\t...options.headers,\n\t\t}\n\n\t\toptions.headers = lavalinkHeaders\n\n\t\tif (options.path == '/decodetrack') {\n\t\t\tconst data = this.decode(\n\t\t\t\toptions.params ? (options.params as Record<string, string>).encodedTrack : ''\n\t\t\t) as D\n\t\t\tif (data) return data\n\t\t}\n\n\t\tconst res = await fetch(url, options)\n\n\t\tif (res.status == 204) {\n\t\t\tthis.debug(\n\t\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t\t)\n\t\t\treturn undefined\n\t\t}\n\t\tif (res.status !== 200) {\n\t\t\tthis.debug(\n\t\t\t\t`${options.method ?? 'GET'} ${options.path} payload=${options.body ? String(options.body) : '{}'}`\n\t\t\t)\n\t\t\tthis.debug(\n\t\t\t\t'Something went wrong with lavalink server. ' +\n          `Status code: ${res.status}\\n Headers: ${util.inspect(options.headers)}`\n\t\t\t)\n\t\t\treturn undefined\n\t\t}\n\n\t\tconst finalData = await res.json()\n\n\t\tthis.debug(\n\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t)\n\n\t\treturn finalData as D\n\t}\n\n\tprotected wsMessageEvent(data: string) {\n\t\tconst wsData = JSON.parse(data.toString())\n\t\tthis.node.wsMessageEvent(wsData)\n\t}\n\n\tprotected debug(logs: string) {\n\t\tthis.manager.emit(\n\t\t\tRainlinkEvents.Debug,\n\t\t\t`[Rainlink] / [Node @ ${this.node?.options.name}] / [Driver] / [Lavalink4] | ${logs}`\n\t\t)\n\t}\n\n\tpublic wsClose(): void {\n\t\tif (this.wsClient) this.wsClient.close(1006, 'Self closed')\n\t}\n\n\tpublic async updateSession(sessionId: string, mode: boolean, timeout: number): Promise<void> {\n\t\tconst options: RainlinkRequesterOptions = {\n\t\t\tpath: `/sessions/${sessionId}`,\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\tmethod: 'PATCH',\n\t\t\tdata: {\n\t\t\t\tresuming: mode,\n\t\t\t\ttimeout: timeout,\n\t\t\t},\n\t\t}\n\n\t\tawait this.requester<{ resuming: boolean; timeout: number }>(options)\n\t\tthis.debug(`Session updated! resume: ${mode}, timeout: ${timeout}`)\n\t\treturn\n\t}\n\n\tprotected decode(base64: string) {\n\t\treturn new LavalinkDecoder(base64).getTrack ?? undefined\n\t}\n}\n","// Copyright (c) <current_year>, The PerformanC Organization\n// This is the modded version of PWSL (typescript variant) for running on Rainlink\n// Source code get from PerformanC/Internals#PWSL\n// Special thanks to all members of PerformanC Organization\n// Link: https://github.com/PerformanC/internals/tree/fbc73f6368a6971835683f4b22bb4e3b15fa0b73\n// Github repo link: https://github.com/PerformanC/internals\n// PWSL's LICENSE: https://github.com/PerformanC/internals/blob/fbc73f6368a6971835683f4b22bb4e3b15fa0b73/LICENSE\n\nimport https from 'node:https'\nimport http from 'node:http'\nimport crypto from 'node:crypto'\nimport EventEmitter from 'node:events'\nimport { URL } from 'node:url'\nimport { Socket } from 'node:net'\nimport Websocket from 'ws'\n\ntype ContinueInfoType = {\n  type: number\n  buffer: Buffer[]\n}\n\nexport type RainlinkWebsocketOptions = {\n  timeout?: number\n  headers?: Record<string, string | number>\n  legacy?: boolean\n}\n\nexport type RainlinkWebsocketFHInfo = {\n  opcode: number\n  fin: boolean\n  payloadLength: number\n  mask: Buffer | null\n  startIndex: number\n}\n\nexport enum RainlinkWebsocketState {\n  WAITING = 'WAITING',\n  PROCESSING = 'PROCESSING',\n}\n\nexport interface RWSEvents {\n  message: [data: string, isBin: boolean]\n  close: [code: number, reason: Buffer | string]\n  error: [err: Error]\n  open: []\n  pong: []\n}\n\n/** Modded version of PWSL */\nexport class RainlinkWebsocket extends EventEmitter {\n\tprotected socket: Socket | null\n\tprotected continueInfo: ContinueInfoType\n\tprotected state: RainlinkWebsocketState\n\tprotected legacyWs?: Websocket = undefined\n\n\t/**\n   * @param url The WS url have to connect\n   * @param options Some additional options of PWSL\n   */\n\tconstructor(\n    protected url: string,\n    protected options: RainlinkWebsocketOptions\n\t) {\n\t\tsuper()\n\t\tthis.socket = null\n\t\tthis.continueInfo = {\n\t\t\ttype: -1,\n\t\t\tbuffer: [],\n\t\t}\n\t\tthis.state = RainlinkWebsocketState.WAITING\n\n\t\tthis.connect()\n\n\t\treturn this\n\t}\n\n\t/**\n   * Connect to current websocket link\n   */\n\tpublic connect() {\n\t\tif (this.options.legacy || process.isBun) {\n\t\t\tthis.bun()\n\t\t\treturn\n\t\t}\n\t\tconst parsedUrl = new URL(this.url)\n\t\tconst isSecure = parsedUrl.protocol === 'wss:'\n\t\tconst agent = isSecure ? https : http\n\t\tconst key = crypto.randomBytes(16).toString('base64')\n\n\t\tconst request = agent.request(\n\t\t\t(isSecure ? 'https://' : 'http://') +\n        parsedUrl.hostname +\n        parsedUrl.pathname +\n        parsedUrl.search,\n\t\t\t{\n\t\t\t\tport: parsedUrl.port || (isSecure ? 443 : 80),\n\t\t\t\ttimeout: this.options?.timeout ?? 0,\n\t\t\t\theaders: {\n\t\t\t\t\t'Sec-WebSocket-Key': key,\n\t\t\t\t\t'Sec-WebSocket-Version': 13,\n\t\t\t\t\tUpgrade: 'websocket',\n\t\t\t\t\tConnection: 'Upgrade',\n\t\t\t\t\t...(this.options?.headers || {}),\n\t\t\t\t},\n\t\t\t\tmethod: 'GET',\n\t\t\t}\n\t\t)\n\n\t\trequest.on('error', (err) => {\n\t\t\tthis.emit('error', err)\n\t\t\tthis.emit('close', 1011, 'Internal Error')\n\n\t\t\tthis.cleanup()\n\t\t})\n\n\t\trequest.on('upgrade', (res, socket, head) => {\n\t\t\tsocket.setNoDelay()\n\t\t\tsocket.setKeepAlive(true)\n\n\t\t\tif (head.length !== 0) socket.unshift(head)\n\n\t\t\tif (res.headers.upgrade?.toLowerCase() !== 'websocket') {\n\t\t\t\tsocket.destroy()\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst digest = crypto\n\t\t\t\t.createHash('sha1')\n\t\t\t\t.update(key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11')\n\t\t\t\t.digest('base64')\n\n\t\t\tif (res.headers['sec-websocket-accept'] !== digest) {\n\t\t\t\tsocket.destroy()\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tsocket.once('readable', () => this.checkData())\n\n\t\t\tsocket.on('close', () => {\n\t\t\t\tthis.emit('close', 1006, 'Socket close suddenly')\n\n\t\t\t\tthis.cleanup()\n\t\t\t})\n\n\t\t\tsocket.on('error', (err) => {\n\t\t\t\tthis.emit('error', err)\n\t\t\t\tthis.emit('close', 1006, 'Socket error')\n\n\t\t\t\tthis.cleanup()\n\t\t\t})\n\n\t\t\tthis.socket = socket\n\n\t\t\tthis.emit('open')\n\t\t})\n\n\t\trequest.end()\n\t}\n\n\t/**\n   * Clean up all current websocket state\n   * @returns boolean\n   */\n\tpublic cleanup(): boolean | 'legacy-is-running' {\n\t\tif (this.legacyWs) return 'legacy-is-running'\n\t\tif (this.socket) {\n\t\t\tthis.socket.destroy()\n\t\t\tthis.socket = null\n\t\t}\n\n\t\tthis.continueInfo = {\n\t\t\ttype: -1,\n\t\t\tbuffer: [],\n\t\t}\n\n\t\treturn true\n\t}\n\n\t/**\n   * Send raw buffer data to ws server\n   * @returns boolean\n   */\n\tpublic sendData(\n\t\tdata: Buffer,\n\t\toptions: { len: number; fin?: boolean; opcode: number; mask?: Buffer | boolean }\n\t) {\n\t\tlet payloadStartIndex = 2\n\t\tlet payloadLength = options.len\n\t\tlet mask = null\n\n\t\tif (options.mask) {\n\t\t\tmask = Buffer.allocUnsafe(4)\n\n\t\t\twhile ((mask[0] | mask[1] | mask[2] | mask[3]) === 0) crypto.randomFillSync(mask, 0, 4)\n\n\t\t\tpayloadStartIndex += 4\n\t\t}\n\n\t\tif (options.len >= 65536) {\n\t\t\tpayloadStartIndex += 8\n\t\t\tpayloadLength = 127\n\t\t} else if (options.len > 125) {\n\t\t\tpayloadStartIndex += 2\n\t\t\tpayloadLength = 126\n\t\t}\n\n\t\tconst header = Buffer.allocUnsafe(payloadStartIndex)\n\t\theader[0] = options.fin ? options.opcode | 128 : options.opcode\n\t\theader[1] = payloadLength\n\n\t\tif (payloadLength === 126) {\n\t\t\theader.writeUInt16BE(options.len, 2)\n\t\t} else if (payloadLength === 127) {\n\t\t\theader.writeUIntBE(options.len, 2, 6)\n\t\t}\n\n\t\tif (options.mask) {\n\t\t\theader[1] |= 128\n\t\t\theader[payloadStartIndex - 4] = mask![0]\n\t\t\theader[payloadStartIndex - 3] = mask![1]\n\t\t\theader[payloadStartIndex - 2] = mask![2]\n\t\t\theader[payloadStartIndex - 1] = mask![3]\n\n\t\t\tfor (let i = 0; i < options.len; i++) {\n\t\t\t\tdata[i] = data[i] ^ mask![i & 3]\n\t\t\t}\n\t\t}\n\n\t\tthis.socket?.write(Buffer.concat([header, data]))\n\n\t\treturn true\n\t}\n\n\t/**\n   * Send string data to ws server\n   * @returns boolean\n   */\n\tpublic send(data: string): boolean {\n\t\tif (this.legacyWs) {\n\t\t\tthis.legacyWs.send(data)\n\t\t\treturn true\n\t\t}\n\t\tconst payload = Buffer.from(data, 'utf-8')\n\t\treturn this.sendData(payload, { len: payload.length, fin: true, opcode: 0x01, mask: true })\n\t}\n\n\t/**\n   * Close the connection of tthe current ws server\n   * @returns boolean\n   */\n\tpublic close(code?: number, reason?: string) {\n\t\tif (this.legacyWs) this.legacyWs.close(1000, 'Self closed')\n\t\tconst data = Buffer.allocUnsafe(2 + Buffer.byteLength(reason ?? 'normal close'))\n\t\tdata.writeUInt16BE(code ?? 1000)\n\t\tdata.write(reason ?? 'normal close', 2)\n\n\t\tthis.sendData(data, { len: data.length, fin: true, opcode: 0x8 })\n\n\t\treturn true\n\t}\n\n\t/** @ignore */\n\tpublic on<K extends keyof RWSEvents>(event: K, listener: (...args: RWSEvents[K]) => void): this {\n\t\tsuper.on(event as string, (...args: any) => listener(...args))\n\t\treturn this\n\t}\n\n\t/** @ignore */\n\tpublic once<K extends keyof RWSEvents>(\n\t\tevent: K,\n\t\tlistener: (...args: RWSEvents[K]) => void\n\t): this {\n\t\tsuper.once(event as string, (...args: any) => listener(...args))\n\t\treturn this\n\t}\n\n\t/** @ignore */\n\tpublic off<K extends keyof RWSEvents>(event: K, listener: (...args: RWSEvents[K]) => void): this {\n\t\tsuper.off(event as string, (...args: any) => listener(...args))\n\t\treturn this\n\t}\n\n\t/** @ignore */\n\tpublic emit<K extends keyof RWSEvents>(event: K, ...data: RWSEvents[K]): boolean {\n\t\treturn super.emit(event as string, ...data)\n\t}\n\n\tprotected async bun() {\n\t\tthis.legacyWs = new Websocket(this.url, {\n\t\t\theaders: this.options.headers,\n\t\t})\n\t\tthis.legacyWs.on('close', (code, reason) => {\n\t\t\tthis.emit('close', code, reason)\n\t\t\tthis.legacyWs?.removeAllListeners()\n\t\t})\n\t\tthis.legacyWs.on('message', (data, isBin) => this.emit('message', data.toString(), isBin))\n\t\tthis.legacyWs.on('open', () => this.emit('open'))\n\t\tthis.legacyWs.on('error', (err) => this.emit('error', err))\n\t\tthis.legacyWs.on('pong', () => this.emit('pong'))\n\t\tthis.legacyWs.on('unexpected-response', (req, res) =>\n\t\t\tthis.emit('error', new Error('Unexpected Response! ' + res.statusCode))\n\t\t)\n\t}\n\n\tprotected async checkData() {\n\t\tconst data = this.socket?.read()\n\n\t\tif (data && this.state === 'WAITING') {\n\t\t\tthis.state = RainlinkWebsocketState.PROCESSING\n\n\t\t\tawait this.processData(data)\n\n\t\t\tthis.state = RainlinkWebsocketState.WAITING\n\t\t}\n\n\t\tthis.socket?.once('readable', () => this.checkData())\n\t}\n\n\tprotected parseFrameHeaderInfo(buffer: Buffer) {\n\t\tlet startIndex = 2\n\t\tconst opcode = buffer[0] & 15\n\t\tconst fin = (buffer[0] & 128) === 128\n\t\tlet payloadLength = buffer[1] & 127\n\n\t\tlet mask = null\n\t\tif ((buffer[1] & 128) === 128) {\n\t\t\tmask = buffer.subarray(startIndex, startIndex + 4)\n\n\t\t\tstartIndex += 4\n\t\t}\n\n\t\tif (payloadLength === 126) {\n\t\t\tstartIndex += 2\n\t\t\tpayloadLength = buffer.readUInt16BE(2)\n\t\t} else if (payloadLength === 127) {\n\t\t\tstartIndex += 8\n\t\t\tpayloadLength = buffer.readUIntBE(4, 8)\n\t\t}\n\n\t\treturn {\n\t\t\topcode,\n\t\t\tfin,\n\t\t\tpayloadLength,\n\t\t\tmask,\n\t\t\tstartIndex,\n\t\t}\n\t}\n\n\tprotected parseFrameHeader(info: RainlinkWebsocketFHInfo, buffer: Buffer) {\n\t\tconst slicedBuffer = buffer.subarray(info.startIndex, info.startIndex + info.payloadLength)\n\n\t\tif (info.mask) {\n\t\t\tfor (let i = 0; i < info.payloadLength; i++) {\n\t\t\t\tslicedBuffer[i] = slicedBuffer[i] ^ info.mask[i & 3]\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\topcode: info.opcode,\n\t\t\tfin: info.fin,\n\t\t\tbuffer: slicedBuffer,\n\t\t\tpayloadLength: info.payloadLength,\n\t\t\trest: buffer.subarray(info.startIndex + info.payloadLength),\n\t\t}\n\t}\n\n\tprotected async processData(data: Buffer) {\n\t\tconst info = this.parseFrameHeaderInfo(data)\n\t\tconst bodyLength = Buffer.byteLength(data) - info.startIndex\n\n\t\tif (info.payloadLength > bodyLength) {\n\t\t\tconst bytesLeft = info.payloadLength - bodyLength\n\n\t\t\tconst nextData = await new Promise((resolve) => {\n\t\t\t\tthis.socket?.once('data', (data) => {\n\t\t\t\t\tif (data.length > bytesLeft) {\n\t\t\t\t\t\tthis.socket?.unshift(data.subarray(bytesLeft))\n\t\t\t\t\t\tdata = data.subarray(0, bytesLeft)\n\t\t\t\t\t}\n\t\t\t\t\tresolve(data)\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tdata = Buffer.concat([data, nextData as Uint8Array])\n\t\t}\n\n\t\tconst headers = this.parseFrameHeader(info, data)\n\n\t\tswitch (headers.opcode) {\n\t\tcase 0x0: {\n\t\t\tthis.continueInfo.buffer.push(headers.buffer)\n\n\t\t\tif (headers.fin) {\n\t\t\t\tthis.emit(\n\t\t\t\t\t'message',\n\t\t\t\t\tthis.continueInfo.type === 1\n\t\t\t\t\t\t? this.continueInfo.buffer.join('')\n\t\t\t\t\t\t: Buffer.concat(this.continueInfo.buffer).toString(),\n\t\t\t\t\tthis.continueInfo.type === 1\n\t\t\t\t)\n\n\t\t\t\tthis.continueInfo = {\n\t\t\t\t\ttype: -1,\n\t\t\t\t\tbuffer: [],\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase 0x1:\n\t\tcase 0x2: {\n\t\t\tif (this.continueInfo.type !== -1 && this.continueInfo.type !== headers.opcode) {\n\t\t\t\tthis.close(1002, 'Invalid continuation frame')\n\t\t\t\tthis.cleanup()\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (!headers.fin) {\n\t\t\t\tthis.continueInfo.type = headers.opcode\n\t\t\t\tthis.continueInfo.buffer.push(headers.buffer)\n\t\t\t} else {\n\t\t\t\tthis.emit(\n\t\t\t\t\t'message',\n\t\t\t\t\theaders.opcode === 0x1\n\t\t\t\t\t\t? headers.buffer.toString('utf8')\n\t\t\t\t\t\t: headers.buffer.toString('utf8'),\n\t\t\t\t\theaders.opcode === 0x1\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase 0x8: {\n\t\t\tif (headers.buffer.length === 0) {\n\t\t\t\tthis.emit('close', 1006, '')\n\t\t\t} else {\n\t\t\t\tconst code = headers.buffer.readUInt16BE(0)\n\t\t\t\tconst reason = headers.buffer.subarray(2).toString('utf-8')\n\n\t\t\t\tthis.emit('close', code, reason)\n\t\t\t}\n\n\t\t\tthis.cleanup()\n\n\t\t\tbreak\n\t\t}\n\t\tcase 0x9: {\n\t\t\tconst pong = Buffer.allocUnsafe(2)\n\t\t\tpong[0] = 0x8a\n\t\t\tpong[1] = 0x00\n\n\t\t\tthis.socket?.write(pong)\n\n\t\t\tbreak\n\t\t}\n\t\tcase 0xa: {\n\t\t\tthis.emit('pong')\n\t\t}\n\t\t// eslint-disable-next-line no-fallthrough\n\t\tdefault: {\n\t\t\tthis.close(1002, 'Invalid opcode')\n\t\t\tthis.cleanup()\n\n\t\t\treturn\n\t\t}\n\t\t}\n\n\t\tif (headers.rest.length > 0) this.socket?.unshift(headers.rest)\n\t}\n}\n","import { RawTrack } from '../Interface/Rest'\n\n/** This class will provide some basic function of a decoder */\nexport abstract class AbstractDecoder {\n  /**\n   * @public\n   * The current position of base64 string\n   */\n  protected abstract position: number\n\n  /**\n   * @public\n   * The current base64 buffer\n   */\n  protected abstract readonly buffer: Buffer\n\n  /**\n   * @public\n   * The current base64 track */\n  protected abstract readonly track: string\n\n  /**\n   * @public\n   * Get decoded track function\n   */\n  public abstract get getTrack(): RawTrack | null\n\n  /**\n   * @public\n   * Change the current potition in base64\n   */\n  protected changeBytes(bytes: number) {\n  \tthis.position += bytes\n  \treturn this.position - bytes\n  }\n\n  /**\n   * @public\n   * Read the byte on current buffer (some like boolean but only 0 and 1)\n   */\n  protected readByte() {\n  \treturn this.buffer[this.changeBytes(1)]\n  }\n\n  /**\n   * @public\n   * Read the unsigned 16 bit int (same like number)\n   */\n  protected readUnsignedShort() {\n  \tconst result = this.buffer.readUInt16BE(this.changeBytes(2))\n  \treturn result\n  }\n\n  /**\n   * @public\n   * Read the unsigned 32 bit int (same like number)\n   */\n  protected readInt() {\n  \tconst result = this.buffer.readInt32BE(this.changeBytes(4))\n  \treturn result\n  }\n\n  /**\n   * @public\n   * Read the bigint\n   */\n  protected readLong() {\n  \tconst msb: bigint = BigInt(this.readInt())\n  \tconst lsb: bigint = BigInt(this.readInt())\n\n  \treturn msb * BigInt(2 ** 32) + lsb\n  }\n\n  /**\n   * @public\n   * Read UTF string (same like string)\n   */\n  protected readUTF() {\n  \tconst len = this.readUnsignedShort()\n  \tconst start = this.changeBytes(Number(len))\n  \tconst result = this.buffer.toString('utf8', start, Number(start) + Number(len))\n  \treturn result\n  }\n}\n","import { RawTrack } from '../Interface/Rest'\nimport { AbstractDecoder } from './AbstractDecoder'\n\n/** A class to decode lavalink track */\nexport class LavalinkDecoder extends AbstractDecoder {\n\t/** The current position of base64 string */\n\tprotected position = 0\n\t/** The current base64 buffer */\n\tprotected buffer: Buffer\n\t/** The current base64 track */\n\tprotected track: string\n\n\tconstructor(track: string) {\n\t\tsuper()\n\t\tthis.track = track\n\t\tthis.buffer = Buffer.from(track, 'base64')\n\t}\n\n\t/** Get the decoded track with version detector */\n\tpublic get getTrack(): RawTrack | null {\n\t\ttry {\n\t\t\tconst isVersioned = (((this.readInt() & 0xc0000000) >> 30) & 1) !== 0\n\t\t\tconst version = isVersioned ? Number(this.readByte()) : 1\n\n\t\t\tswitch (version) {\n\t\t\tcase 1:\n\t\t\t\treturn this.trackVersionOne\n\t\t\tcase 2:\n\t\t\t\treturn this.trackVersionTwo\n\t\t\tcase 3:\n\t\t\t\treturn this.trackVersionThree\n\t\t\tdefault:\n\t\t\t\treturn null\n\t\t\t}\n\t\t} catch {\n\t\t\treturn null\n\t\t}\n\t}\n\n\t/** Get the decoded track with version 1 */\n\tpublic get trackVersionOne(): RawTrack | null {\n\t\ttry {\n\t\t\treturn {\n\t\t\t\tencoded: this.track,\n\t\t\t\tinfo: {\n\t\t\t\t\ttitle: this.readUTF(),\n\t\t\t\t\tauthor: this.readUTF(),\n\t\t\t\t\tlength: Number(this.readLong()),\n\t\t\t\t\tidentifier: this.readUTF(),\n\t\t\t\t\tisSeekable: true,\n\t\t\t\t\tisStream: !!this.readByte(),\n\t\t\t\t\turi: null,\n\t\t\t\t\tartworkUrl: null,\n\t\t\t\t\tisrc: null,\n\t\t\t\t\tsourceName: this.readUTF().toLowerCase(),\n\t\t\t\t\tposition: Number(this.readLong()),\n\t\t\t\t},\n\t\t\t\tpluginInfo: {},\n\t\t\t}\n\t\t} catch {\n\t\t\treturn null\n\t\t}\n\t}\n\n\t/** Get the decoded track with version 2 */\n\tpublic get trackVersionTwo(): RawTrack | null {\n\t\ttry {\n\t\t\treturn {\n\t\t\t\tencoded: this.track,\n\t\t\t\tinfo: {\n\t\t\t\t\ttitle: this.readUTF(),\n\t\t\t\t\tauthor: this.readUTF(),\n\t\t\t\t\tlength: Number(this.readLong()),\n\t\t\t\t\tidentifier: this.readUTF(),\n\t\t\t\t\tisSeekable: true,\n\t\t\t\t\tisStream: !!this.readByte(),\n\t\t\t\t\turi: this.readByte() ? this.readUTF() : null,\n\t\t\t\t\tartworkUrl: null,\n\t\t\t\t\tisrc: null,\n\t\t\t\t\tsourceName: this.readUTF().toLowerCase(),\n\t\t\t\t\tposition: Number(this.readLong()),\n\t\t\t\t},\n\t\t\t\tpluginInfo: {},\n\t\t\t}\n\t\t} catch {\n\t\t\treturn null\n\t\t}\n\t}\n\n\t/** Get the decoded track with version 3 */\n\tpublic get trackVersionThree(): RawTrack | null {\n\t\ttry {\n\t\t\treturn {\n\t\t\t\tencoded: this.track,\n\t\t\t\tinfo: {\n\t\t\t\t\ttitle: this.readUTF(),\n\t\t\t\t\tauthor: this.readUTF(),\n\t\t\t\t\tlength: Number(this.readLong()),\n\t\t\t\t\tidentifier: this.readUTF(),\n\t\t\t\t\tisSeekable: true,\n\t\t\t\t\tisStream: !!this.readByte(),\n\t\t\t\t\turi: this.readByte() ? this.readUTF() : null,\n\t\t\t\t\tartworkUrl: this.readByte() ? this.readUTF() : null,\n\t\t\t\t\tisrc: this.readByte() ? this.readUTF() : null,\n\t\t\t\t\tsourceName: this.readUTF().toLowerCase(),\n\t\t\t\t\tposition: Number(this.readLong()),\n\t\t\t\t},\n\t\t\t\tpluginInfo: {},\n\t\t\t}\n\t\t} catch {\n\t\t\treturn null\n\t\t}\n\t}\n}\n","import { RainlinkConnectState, RainlinkEvents } from '../Interface/Constants'\nimport { RainlinkNodeOptions } from '../Interface/Manager'\nimport { RainlinkNode } from '../Node/RainlinkNode'\nimport { Rainlink } from '../Rainlink'\nimport { RainlinkDatabase } from '../Utilities/RainlinkDatabase'\n\n/** The node manager class for managing all audio sending server/node */\nexport class RainlinkNodeManager extends RainlinkDatabase<RainlinkNode> {\n\t/** The rainlink manager */\n\tpublic manager: Rainlink\n\n\t/**\n   * The main class for handling lavalink servers\n   * @param manager\n   */\n\tconstructor(manager: Rainlink) {\n\t\tsuper()\n\t\tthis.manager = manager\n\t}\n\n\t/**\n   * Add a new Node.\n   * @returns RainlinkNode\n   */\n\tpublic add(node: RainlinkNodeOptions) {\n\t\tconst newNode = new RainlinkNode(this.manager, node)\n\t\tnewNode.connect()\n\t\tthis.set(node.name, newNode)\n\t\tthis.debug(`Node ${node.name} added to manager!`)\n\t\treturn newNode\n\t}\n\n\t/**\n   * Get a least used node.\n   * @returns RainlinkNode\n   */\n\tpublic async getLeastUsed(customNodeArray?: RainlinkNode[]): Promise<RainlinkNode> {\n\t\tconst nodes = customNodeArray ? customNodeArray : this.values\n\t\tif (this.manager.rainlinkOptions.options!.nodeResolver) {\n\t\t\tconst resolverData = await this.manager.rainlinkOptions.options!.nodeResolver(nodes)\n\t\t\tif (resolverData) return resolverData\n\t\t}\n\n\t\tconst onlineNodes = nodes.filter((node) => node.state === RainlinkConnectState.Connected)\n\t\tif (!onlineNodes.length) throw new Error('No nodes are online')\n\n\t\tconst temp = await Promise.all(\n\t\t\tonlineNodes.map(async (node) => {\n\t\t\t\tconst stats = await node.rest.getStatus()\n\t\t\t\treturn !stats ? { players: 0, node: node } : { players: stats.players, node: node }\n\t\t\t})\n\t\t)\n\t\ttemp.sort((a, b) => a.players - b.players)\n\n\t\treturn temp[0].node\n\t}\n\n\t/**\n   * Get all current nodes\n   * @returns RainlinkNode[]\n   */\n\tpublic all(): RainlinkNode[] {\n\t\treturn this.values\n\t}\n\n\t/**\n   * Remove a node.\n   * @returns void\n   */\n\tpublic remove(name: string): void {\n\t\tconst node = this.get(name)\n\t\tif (node) {\n\t\t\tnode.disconnect()\n\t\t\tthis.delete(name)\n\t\t\tthis.debug(`Node ${name} removed from manager!`)\n\t\t}\n\t\treturn\n\t}\n\n\tprotected debug(logs: string) {\n\t\tthis.manager.emit(RainlinkEvents.Debug, `[Rainlink] / [NodeManager] | ${logs}`)\n\t}\n}\n","import { Rainlink } from '../Rainlink'\nimport { metadata } from '../metadata'\nimport { LavalinkLoadType, RainlinkEvents } from '../Interface/Constants'\nimport { RainlinkRequesterOptions, UpdatePlayerInfo } from '../Interface/Rest'\nimport { RainlinkNode } from '../Node/RainlinkNode'\nimport { AbstractDriver } from './AbstractDriver'\nimport util from 'node:util'\nimport { RainlinkWebsocket } from '../Utilities/RainlinkWebsocket'\nimport { LavalinkDecoder } from '../Utilities/LavalinkDecoder'\nimport { RainlinkFunctions } from '../Utilities/RainlinkFunctions'\n\nexport enum Lavalink3loadType {\n  TRACK_LOADED = 'TRACK_LOADED',\n  PLAYLIST_LOADED = 'PLAYLIST_LOADED',\n  SEARCH_RESULT = 'SEARCH_RESULT',\n  NO_MATCHES = 'NO_MATCHES',\n  LOAD_FAILED = 'LOAD_FAILED',\n}\n\nexport class Lavalink3 extends AbstractDriver {\n\tpublic id: string = 'lavalink/v3/koto'\n\tpublic wsUrl: string = ''\n\tpublic httpUrl: string = ''\n\tpublic sessionId: string | null\n\tpublic playerFunctions: RainlinkFunctions\n\tpublic functions: RainlinkFunctions\n\tprotected wsClient?: RainlinkWebsocket\n\n\tconstructor(\n    public manager: Rainlink,\n    public node: RainlinkNode\n\t) {\n\t\tsuper()\n\t\tthis.playerFunctions = new RainlinkFunctions()\n\t\tthis.functions = new RainlinkFunctions()\n\t\tthis.sessionId = null\n\t\tthis.wsUrl = `${this.node.options.secure ? 'wss' : 'ws'}://${this.node.options.host}:${this.node.options.port}/`\n\t\tthis.httpUrl = `${this.node.options.secure ? 'https://' : 'http://'}${this.node.options.host}:${this.node.options.port}`\n\t\tthis.functions.set('decode', this.decode)\n\t}\n\n\tpublic connect(): RainlinkWebsocket {\n\t\tconst isResume = this.manager!.rainlinkOptions.options!.resume\n\n\t\tconst headers: Record<string, string | number> = {\n\t\t\tAuthorization: this.node!.options.auth,\n\t\t\t'user-id': String(this.manager!.id),\n\t\t\t'client-name': `${metadata.name}/${metadata.version} (${metadata.github})`,\n\t\t\t'user-agent': this.manager!.rainlinkOptions.options!.userAgent!,\n\t\t\t'num-shards': this.manager!.shardCount,\n\t\t}\n\t\tif (this.sessionId !== null && isResume) headers['session-id'] = this.sessionId\n\n\t\tconst ws = new RainlinkWebsocket(this.wsUrl, {\n\t\t\tlegacy: this.node.options.legacyWS,\n\t\t\theaders,\n\t\t})\n\n\t\tws.on('open', () => {\n      this.node!.wsOpenEvent()\n\t\t})\n\t\tws.on('message', (data: string) => this.wsMessageEvent(data))\n\t\tws.on('error', (err) => this.node!.wsErrorEvent(err))\n\t\tws.on('close', (code, reason) => {\n      this.node!.wsCloseEvent(code, reason)\n      ws.removeAllListeners()\n\t\t})\n\t\tthis.wsClient = ws\n\t\treturn ws\n\t}\n\n\tpublic async requester<D = any>(options: RainlinkRequesterOptions): Promise<D | undefined> {\n\t\tconst url = new URL(`${this.httpUrl}${options.path}`)\n\t\tif (options.params) url.search = new URLSearchParams(options.params).toString()\n\t\tif (options.rawReqData && options.path.includes('/sessions')) {\n\t\t\tthis.convertToV3websocket(options.rawReqData)\n\t\t\treturn\n\t\t}\n\t\tif (options.data) {\n\t\t\tthis.convertToV3request(options.data as Record<string, any>)\n\t\t\toptions.body = JSON.stringify(options.data)\n\t\t}\n\t\tif (options.path.includes('/sessions//')) return undefined\n\t\tif (\n\t\t\t/\\/sessions\\/(.*)\\/players\\/(.*)/.test(options.path) ||\n      (options.method && options.method == 'DELETE')\n\t\t)\n\t\t\treturn undefined\n\n\t\tconst lavalinkHeaders = {\n\t\t\tauthorization: this.node!.options.auth,\n\t\t\t'user-agent': this.manager!.rainlinkOptions.options!.userAgent!,\n\t\t\t...options.headers,\n\t\t}\n\n\t\toptions.headers = lavalinkHeaders\n\t\tif (this.sessionId) url.pathname = '/v3' + url.pathname\n\n\t\tif (options.path == '/decodetrack') {\n\t\t\tconst data = this.decode(\n\t\t\t\toptions.params ? (options.params as Record<string, string>).encodedTrack : ''\n\t\t\t) as D\n\t\t\tif (data) return data\n\t\t}\n\n\t\tconst res = await fetch(url, options)\n\n\t\tif (res.status == 204) {\n\t\t\tthis.debug(\n\t\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t\t)\n\t\t\treturn undefined\n\t\t}\n\t\tif (res.status !== 200) {\n\t\t\tthis.debug(\n\t\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t\t)\n\t\t\tthis.debug(\n\t\t\t\t'Something went wrong with lavalink server. ' +\n          `Status code: ${res.status}\\n Headers: ${util.inspect(options.headers)}`\n\t\t\t)\n\t\t\treturn undefined\n\t\t}\n\n\t\tconst preFinalData = await res.json()\n\n\t\tlet finalData: any = preFinalData\n\n\t\tif (finalData.loadType) {\n\t\t\tfinalData = this.convertV4trackResponse(finalData) as D\n\t\t}\n\n\t\tthis.debug(\n\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t)\n\n\t\treturn finalData\n\t}\n\n\tprotected convertToV3websocket(data: UpdatePlayerInfo) {\n\t\tlet isPlaySent\n\t\tif (!data) return\n\n\t\t// Voice update\n\t\tif (data.playerOptions.voice)\n\t\t\tthis.wsSendData({\n\t\t\t\top: 'voiceUpdate',\n\t\t\t\tguildId: data.guildId,\n\t\t\t\tsessionId: data.playerOptions.voice.sessionId,\n\t\t\t\tevent: data.playerOptions.voice,\n\t\t\t})\n\n\t\t// Play track\n\t\tif (\n\t\t\tdata.playerOptions.track &&\n      data.playerOptions.track.encoded &&\n      data.playerOptions.track.length !== 0\n\t\t) {\n\t\t\tisPlaySent = true\n\t\t\tthis.wsSendData({\n\t\t\t\top: 'play',\n\t\t\t\tguildId: data.guildId,\n\t\t\t\ttrack: data.playerOptions.track.encoded,\n\t\t\t\tstartTime: data.playerOptions.position,\n\t\t\t\tendTime: data.playerOptions.track.length,\n\t\t\t\tvolume: data.playerOptions.volume,\n\t\t\t\tnoReplace: data.noReplace,\n\t\t\t\tpause: data.playerOptions.paused,\n\t\t\t})\n\t\t}\n\n\t\t// Destroy player\n\t\tif (\n\t\t\tdata.playerOptions.track &&\n      data.playerOptions.track.encoded == null &&\n      data.playerOptions.track.length === 0\n\t\t)\n\t\t\tthis.wsSendData({\n\t\t\t\top: 'destroy',\n\t\t\t\tguildId: data.guildId,\n\t\t\t})\n\n\t\t// Destroy player\n\t\tif (data.playerOptions.track && data.playerOptions.track.encoded == null)\n\t\t\tthis.wsSendData({\n\t\t\t\top: 'stop',\n\t\t\t\tguildId: data.guildId,\n\t\t\t})\n\n\t\tif (isPlaySent) return (isPlaySent = false)\n\n\t\t// Pause player\n\t\tif (data.playerOptions.paused === false || data.playerOptions.paused === true)\n\t\t\tthis.wsSendData({\n\t\t\t\top: 'pause',\n\t\t\t\tguildId: data.guildId,\n\t\t\t\tpause: data.playerOptions.paused,\n\t\t\t})\n\n\t\t// Seek player\n\t\tif (data.playerOptions.position)\n\t\t\tthis.wsSendData({\n\t\t\t\top: 'seek',\n\t\t\t\tguildId: data.guildId,\n\t\t\t\tposition: data.playerOptions.position,\n\t\t\t})\n\n\t\t// Voice player\n\t\tif (data.playerOptions.volume)\n\t\t\tthis.wsSendData({\n\t\t\t\top: 'volume',\n\t\t\t\tguildId: data.guildId,\n\t\t\t\tvolume: data.playerOptions.volume,\n\t\t\t})\n\n\t\t// Filter player\n\t\tif (data.playerOptions.filters)\n\t\t\tthis.wsSendData({\n\t\t\t\top: 'filters',\n\t\t\t\tguildId: data.guildId,\n\t\t\t\t...data.playerOptions.filters,\n\t\t\t})\n\t}\n\n\tprotected checkUpdateExist(data: Record<string, any>) {\n\t\treturn (\n\t\t\tdata.track ||\n      data.identifier ||\n      data.position ||\n      data.endTime ||\n      data.volume ||\n      data.paused ||\n      data.filters ||\n      data.voice\n\t\t)\n\t}\n\n\tprotected wsSendData(data: Record<string, unknown>): void {\n\t\tif (!this.wsClient) return\n\t\tconst jsonData = JSON.stringify(data)\n\t\tthis.wsClient.send(jsonData)\n\t\treturn\n\t}\n\n\tprotected wsMessageEvent(data: string) {\n\t\tconst wsData = JSON.parse(data.toString())\n\t\tif (wsData.reason) wsData.reason = (wsData.reason as string).toLowerCase()\n\t\tif (wsData.reason == 'LOAD_FAILED') wsData.reason = 'loadFailed'\n    this.node!.wsMessageEvent(wsData)\n\t}\n\n\tpublic async updateSession(sessionId: string, mode: boolean, timeout: number): Promise<void> {\n\t\tif (!sessionId) {\n\t\t\tthis.wsSendData({\n\t\t\t\top: 'configureResuming',\n\t\t\t\tkey: 'rainlink/lavalink/v3/koto/legacy',\n\t\t\t\ttimeout: 60,\n\t\t\t})\n\t\t\tthis.debug(`Session updated! resume: ${mode}, timeout: ${timeout}`)\n\t\t\treturn\n\t\t}\n\t\tconst options: RainlinkRequesterOptions = {\n\t\t\tpath: `/sessions/${sessionId}`,\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\tmethod: 'PATCH',\n\t\t\tdata: {\n\t\t\t\tresumingKey: sessionId,\n\t\t\t\ttimeout: timeout,\n\t\t\t},\n\t\t}\n\n\t\tawait this.requester<{ resuming: boolean; timeout: number }>(options)\n\t\tthis.debug(`Session updated! resume: ${mode}, timeout: ${timeout}`)\n\t\treturn\n\t}\n\n\tprotected debug(logs: string) {\n    this.manager!.emit(\n    \tRainlinkEvents.Debug,\n    \t`[Rainlink] / [Node @ ${this.node?.options.name}] / [Driver] / [Lavalink3] | ${logs}`\n    )\n\t}\n\n\tpublic wsClose(): void {\n\t\tif (this.wsClient) this.wsClient.close(1006, 'Self closed')\n\t}\n\n\tprotected testJSON(text: string) {\n\t\tif (typeof text !== 'string') {\n\t\t\treturn false\n\t\t}\n\t\ttry {\n\t\t\tJSON.parse(text)\n\t\t\treturn true\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tprotected convertToV3request(data?: Record<string, any>) {\n\t\tif (!data) return\n\t\tif (data.track && data.track.encoded !== undefined) {\n\t\t\tdata.encodedTrack = data.track.encoded\n\t\t\tdelete data.track\n\t\t}\n\t\treturn\n\t}\n\n\tprotected convertV4trackResponse(v3data: Record<string, any>): Record<string, any> {\n\t\tif (!v3data) return {}\n\t\tif (v3data.loadType == Lavalink3loadType.LOAD_FAILED) v3data.loadType = LavalinkLoadType.ERROR\n\t\tif (v3data.loadType.includes('PLAYLIST_LOADED')) {\n\t\t\tv3data.loadType = LavalinkLoadType.PLAYLIST\n\t\t\tconst convertedArray = []\n\t\t\tfor (let i = 0; i < v3data.tracks.length; i++) {\n\t\t\t\tconvertedArray.push(this.buildV4track(v3data.tracks[i]))\n\t\t\t}\n\t\t\tv3data.data = {\n\t\t\t\tinfo: v3data.playlistInfo,\n\t\t\t\ttracks: convertedArray,\n\t\t\t}\n\t\t\tdelete v3data.tracks\n\t\t\treturn v3data\n\t\t}\n\t\tif (v3data.loadType == Lavalink3loadType.SEARCH_RESULT) {\n\t\t\tv3data.loadType = LavalinkLoadType.SEARCH\n\t\t\tv3data.data = v3data.tracks\n\t\t\tfor (let i = 0; i < v3data.data.length; i++) {\n\t\t\t\tv3data.data[i] = this.buildV4track(v3data.data[i])\n\t\t\t}\n\t\t\tdelete v3data.tracks\n\t\t\tdelete v3data.playlistInfo\n\t\t}\n\t\tif (v3data.loadType == Lavalink3loadType.TRACK_LOADED) {\n\t\t\tv3data.loadType = LavalinkLoadType.TRACK\n\t\t\tv3data.data = this.buildV4track(v3data.tracks[0])\n\t\t\tdelete v3data.tracks\n\t\t}\n\t\tif (v3data.loadType == Lavalink3loadType.NO_MATCHES) v3data.loadType = LavalinkLoadType.EMPTY\n\t\treturn v3data\n\t}\n\n\tprotected buildV4track(v3data: Record<string, any>) {\n\t\treturn {\n\t\t\tencoded: v3data.track,\n\t\t\tinfo: {\n\t\t\t\tsourceName: v3data.info.sourceName,\n\t\t\t\tidentifier: v3data.info.identifier,\n\t\t\t\tisSeekable: v3data.info.isSeekable,\n\t\t\t\tauthor: v3data.info.author,\n\t\t\t\tlength: v3data.info.length,\n\t\t\t\tisStream: v3data.info.isStream,\n\t\t\t\tposition: v3data.info.position,\n\t\t\t\ttitle: v3data.info.title,\n\t\t\t\turi: v3data.info.uri,\n\t\t\t\tartworkUrl: undefined,\n\t\t\t},\n\t\t\tpluginInfo: undefined,\n\t\t}\n\t}\n\n\tprotected decode(base64: string) {\n\t\treturn new LavalinkDecoder(base64).getTrack ?? undefined\n\t}\n}\n","import { Rainlink } from '../Rainlink'\nimport { metadata } from '../metadata'\nimport { LavalinkLoadType, RainlinkEvents } from '../Interface/Constants'\nimport { RainlinkRequesterOptions } from '../Interface/Rest'\nimport { RainlinkNode } from '../Node/RainlinkNode'\nimport { AbstractDriver } from './AbstractDriver'\nimport util from 'node:util'\nimport { RainlinkWebsocket } from '../Utilities/RainlinkWebsocket'\nimport { LavalinkDecoder } from '../Utilities/LavalinkDecoder'\nimport { RainlinkFunctions } from '../Utilities/RainlinkFunctions'\nimport { RainlinkPlayer } from '../Player/RainlinkPlayer'\n\nexport enum Nodelink2loadType {\n  SHORTS = 'shorts',\n  ALBUM = 'album',\n  ARTIST = 'artist',\n  SHOW = 'show',\n  EPISODE = 'episode',\n  STATION = 'station',\n  PODCAST = 'podcast',\n}\n\nexport interface NodelinkGetLyricsInterface {\n  loadType: Nodelink2loadType | LavalinkLoadType\n  data:\n    | {\n        name: string\n        synced: boolean\n        data: {\n          startTime: number\n          endTime: number\n          text: string\n        }[]\n        rtl: boolean\n      }\n    | Record<string, never>\n}\n\nexport class Nodelink2 extends AbstractDriver {\n\tpublic id: string = 'nodelink/v2/nari'\n\tpublic wsUrl: string = ''\n\tpublic httpUrl: string = ''\n\tpublic sessionId: string | null\n\tpublic playerFunctions: RainlinkFunctions\n\tpublic functions: RainlinkFunctions\n\tprotected wsClient?: RainlinkWebsocket\n\n\tconstructor(\n    public manager: Rainlink,\n    public node: RainlinkNode\n\t) {\n\t\tsuper()\n\t\tthis.sessionId = null\n\t\tthis.playerFunctions = new RainlinkFunctions()\n\t\tthis.functions = new RainlinkFunctions()\n\t\tthis.wsUrl = `${this.node.options.secure ? 'wss' : 'ws'}://${this.node.options.host}:${this.node.options.port}/v4/websocket`\n\t\tthis.httpUrl = `${this.node.options.secure ? 'https://' : 'http://'}${this.node.options.host}:${this.node.options.port}/v4`\n\t\tthis.playerFunctions.set('getLyric', this.getLyric)\n\t\tthis.functions.set('decode', this.decode)\n\t}\n\n\tpublic connect(): RainlinkWebsocket {\n\t\tconst isResume = this.manager.rainlinkOptions.options!.resume\n\n\t\tconst headers: Record<string, string | number> = {\n\t\t\tAuthorization: this.node.options.auth,\n\t\t\t'user-id': String(this.manager.id),\n\t\t\t'accept-encoding': (process as any).isBun ? 'gzip, deflate' : 'br, gzip, deflate',\n\t\t\t'client-name': `${metadata.name}/${metadata.version} (${metadata.github})`,\n\t\t\t'user-agent': this.manager.rainlinkOptions.options!.userAgent!,\n\t\t\t'num-shards': String(this.manager.shardCount),\n\t\t}\n\t\tif (this.sessionId !== null && isResume) headers['session-id'] = this.sessionId\n\n\t\tconst ws = new RainlinkWebsocket(this.wsUrl, {\n\t\t\tlegacy: this.node.options.legacyWS,\n\t\t\theaders,\n\t\t})\n\n\t\tws.on('open', () => {\n\t\t\tthis.node.wsOpenEvent()\n\t\t})\n\t\tws.on('message', (data) => this.wsMessageEvent(data))\n\t\tws.on('error', (err) => this.node.wsErrorEvent(err))\n\t\tws.on('close', (code, reason) => {\n\t\t\tthis.node.wsCloseEvent(code, reason)\n\t\t\tws.removeAllListeners()\n\t\t})\n\t\tthis.wsClient = ws\n\t\treturn ws\n\t}\n\n\tpublic async requester<D = any>(options: RainlinkRequesterOptions): Promise<D | undefined> {\n\t\tif (options.path.includes('/sessions') && this.sessionId == null)\n\t\t\tthrow new Error('sessionId not initalized! Please wait for nodelink get connected!')\n\t\tconst url = new URL(`${this.httpUrl}${options.path}`)\n\t\tif (options.params) url.search = new URLSearchParams(options.params).toString()\n\n\t\tif (options.data) {\n\t\t\toptions.body = JSON.stringify(options.data)\n\t\t}\n\n\t\tconst lavalinkHeaders = {\n\t\t\tauthorization: this.node.options.auth,\n\t\t\t'user-agent': this.manager.rainlinkOptions.options!.userAgent!,\n\t\t\t'accept-encoding': (process as any).isBun ? 'gzip, deflate' : 'br, gzip, deflate',\n\t\t\t...options.headers,\n\t\t}\n\n\t\toptions.headers = lavalinkHeaders\n\n\t\tif (options.path == '/decodetrack') {\n\t\t\tconst data = this.decode(\n\t\t\t\toptions.params ? (options.params as Record<string, string>).encodedTrack : ''\n\t\t\t) as D\n\t\t\tif (data) return data\n\t\t}\n\n\t\tconst res = await fetch(url, options)\n\n\t\tif (res.status == 204) {\n\t\t\tthis.debug(\n\t\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t\t)\n\t\t\treturn undefined\n\t\t}\n\t\tif (res.status !== 200) {\n\t\t\tthis.debug(\n\t\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t\t)\n\t\t\tthis.debug(\n\t\t\t\t'Something went wrong with nodelink server. ' +\n          `Status code: ${res.status}\\n Headers: ${util.inspect(options.headers)}`\n\t\t\t)\n\t\t\treturn undefined\n\t\t}\n\n\t\tconst preFinalData = (await res.json()) as D\n\t\tlet finalData: any = preFinalData\n\n\t\tif (finalData.loadType) {\n\t\t\tfinalData = this.convertV4trackResponse(finalData) as D\n\t\t}\n\n\t\tthis.debug(\n\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t)\n\n\t\treturn finalData\n\t}\n\n\tprotected wsMessageEvent(data: string) {\n\t\tconst wsData = JSON.parse(data.toString())\n\t\tthis.node.wsMessageEvent(wsData)\n\t}\n\n\tprotected debug(logs: string) {\n\t\tthis.manager.emit(\n\t\t\tRainlinkEvents.Debug,\n\t\t\t`[Rainlink] / [Node @ ${this.node?.options.name}] / [Driver] / [Nodelink2] | ${logs}`\n\t\t)\n\t}\n\n\tpublic wsClose(): void {\n\t\tif (this.wsClient) this.wsClient.close(1006, 'Self closed')\n\t}\n\n\tprotected convertV4trackResponse(nl2Data: Record<string, any>): Record<string, any> {\n\t\tif (!nl2Data) return {}\n\t\tswitch (nl2Data.loadType) {\n\t\tcase Nodelink2loadType.SHORTS: {\n\t\t\tnl2Data.loadType = LavalinkLoadType.TRACK\n\t\t\treturn nl2Data\n\t\t}\n\t\tcase Nodelink2loadType.ALBUM: {\n\t\t\tnl2Data.loadType = LavalinkLoadType.PLAYLIST\n\t\t\treturn nl2Data\n\t\t}\n\t\tcase Nodelink2loadType.ARTIST: {\n\t\t\tnl2Data.loadType = LavalinkLoadType.PLAYLIST\n\t\t\treturn nl2Data\n\t\t}\n\t\tcase Nodelink2loadType.EPISODE: {\n\t\t\tnl2Data.loadType = LavalinkLoadType.PLAYLIST\n\t\t\treturn nl2Data\n\t\t}\n\t\tcase Nodelink2loadType.STATION: {\n\t\t\tnl2Data.loadType = LavalinkLoadType.PLAYLIST\n\t\t\treturn nl2Data\n\t\t}\n\t\tcase Nodelink2loadType.PODCAST: {\n\t\t\tnl2Data.loadType = LavalinkLoadType.PLAYLIST\n\t\t\treturn nl2Data\n\t\t}\n\t\tcase Nodelink2loadType.SHOW: {\n\t\t\tnl2Data.loadType = LavalinkLoadType.PLAYLIST\n\t\t\treturn nl2Data\n\t\t}\n\t\t}\n\t\treturn nl2Data\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic async updateSession(sessionId: string, mode: boolean, timeout: number): Promise<void> {\n\t\tthis.debug('WARNING: Nodelink doesn\\'t support resuming, set resume to true is useless')\n\t\treturn\n\t}\n\n\tpublic async getLyric(\n\t\tplayer: RainlinkPlayer,\n\t\ttrackName?: string,\n\t\tlanguage?: string\n\t): Promise<NodelinkGetLyricsInterface | undefined> {\n\t\tlet track: string = String(player.queue.current?.encoded)\n\t\tif (trackName) {\n\t\t\tconst nodeName = player.node.options.name\n\t\t\tconst res = await player.search('trackName', { nodeName })\n\t\t\tif (res.tracks.length == 0) return undefined\n\t\t\ttrack = res.tracks[0].encoded\n\t\t}\n\t\tconst options: RainlinkRequesterOptions = {\n\t\t\tpath: '/loadlyrics',\n\t\t\tparams: {\n\t\t\t\tencodedTrack: track,\n\t\t\t\tlanguage: language ? language : 'en',\n\t\t\t},\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\tmethod: 'GET',\n\t\t}\n\t\tconst data = await player.node.driver.requester<NodelinkGetLyricsInterface>(options)\n\t\treturn data\n\t}\n\n\tprotected testJSON(text: string) {\n\t\tif (typeof text !== 'string') {\n\t\t\treturn false\n\t\t}\n\t\ttry {\n\t\t\tJSON.parse(text)\n\t\t\treturn true\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tprotected decode(base64: string) {\n\t\treturn new LavalinkDecoder(base64).getTrack ?? undefined\n\t}\n}\n","import { Rainlink } from '../Rainlink'\nimport { metadata } from '../metadata'\nimport { RainlinkEvents } from '../Interface/Constants'\nimport { RainlinkRequesterOptions, RawTrack } from '../Interface/Rest'\nimport { RainlinkNode } from '../Node/RainlinkNode'\nimport { AbstractDriver } from './AbstractDriver'\nimport util from 'node:util'\nimport { RainlinkWebsocket } from '../Utilities/RainlinkWebsocket'\nimport { AbstractDecoder } from '../Utilities/AbstractDecoder'\nimport { RainlinkFunctions } from '../Utilities/RainlinkFunctions'\n\nexport class FrequenC extends AbstractDriver {\n\tpublic id: string = 'frequenc/v1/miku'\n\tpublic wsUrl: string = ''\n\tpublic httpUrl: string = ''\n\tpublic sessionId: string | null\n\tpublic playerFunctions: RainlinkFunctions\n\tpublic functions: RainlinkFunctions\n\tprotected wsClient?: RainlinkWebsocket\n\n\tconstructor(\n    public manager: Rainlink,\n    public node: RainlinkNode\n\t) {\n\t\tsuper()\n\t\tthis.playerFunctions = new RainlinkFunctions()\n\t\tthis.functions = new RainlinkFunctions()\n\t\tthis.sessionId = null\n\t\tthis.wsUrl = `${this.node.options.secure ? 'wss' : 'ws'}://${this.node.options.host}:${this.node.options.port}/v1/websocket`\n\t\tthis.httpUrl = `${this.node.options.secure ? 'https://' : 'http://'}${this.node.options.host}:${this.node.options.port}/v1`\n\t\tthis.functions.set('decode', this.decode)\n\t}\n\n\tpublic connect(): RainlinkWebsocket {\n\t\tconst ws = new RainlinkWebsocket(this.wsUrl, {\n\t\t\tlegacy: this.node.options.legacyWS,\n\t\t\theaders: {\n\t\t\t\tauthorization: this.node!.options.auth,\n\t\t\t\t'user-id': String(this.manager!.id),\n\t\t\t\t'client-info': `${metadata.name}/${metadata.version} (${metadata.github})`,\n\t\t\t\t'user-agent': this.manager!.rainlinkOptions.options!.userAgent!,\n\t\t\t\t'num-shards': this.manager!.shardCount,\n\t\t\t},\n\t\t})\n\n\t\tws.on('open', () => {\n      this.node!.wsOpenEvent()\n\t\t})\n\t\tws.on('message', (data) => this.wsMessageEvent(data))\n\t\tws.on('error', (err) => this.node!.wsErrorEvent(err))\n\t\tws.on('close', (code, reason) => {\n      this.node!.wsCloseEvent(code, reason)\n      ws.removeAllListeners()\n\t\t})\n\t\tthis.wsClient = ws\n\t\treturn ws\n\t}\n\n\tpublic async requester<D = any>(options: RainlinkRequesterOptions): Promise<D | undefined> {\n\t\tif (options.path.includes('/sessions') && this.sessionId == null)\n\t\t\tthrow new Error('sessionId not initalized! Please wait for lavalink get connected!')\n\t\tconst url = new URL(`${this.httpUrl}${options.path}`)\n\t\tif (options.params) url.search = new URLSearchParams(options.params).toString()\n\t\tif (options.data) {\n\t\t\tconst converted = this.camelToSnake(options.data)\n\t\t\toptions.body = JSON.stringify(converted)\n\t\t}\n\n\t\tconst lavalinkHeaders = {\n\t\t\tauthorization: this.node!.options.auth,\n\t\t\t...options.headers,\n\t\t}\n\n\t\toptions.headers = lavalinkHeaders\n\t\tif (options.body && JSON.stringify(options.body) == '{}') delete options.body\n\t\t//  + url.search;\n\n\t\tif (options.path == '/decodetrack') {\n\t\t\tconst data = this.decode(\n\t\t\t\toptions.params ? (options.params as Record<string, string>).encodedTrack : ''\n\t\t\t) as D\n\t\t\tif (data) return data\n\t\t}\n\n\t\tconst res = await fetch(url, options)\n\n\t\tif (res.status == 204) {\n\t\t\tthis.debug(\n\t\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t\t)\n\t\t\treturn undefined\n\t\t}\n\t\tif (res.status !== 200) {\n\t\t\tthis.debug(\n\t\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t\t)\n\t\t\tthis.debug(\n\t\t\t\t'Something went wrong with frequenc server. ' +\n          `Status code: ${res.status}\\n Headers: ${util.inspect(options.headers)}`\n\t\t\t)\n\t\t\treturn undefined\n\t\t}\n\n\t\tlet finalData\n\n\t\tif (res.headers.get('content-type') == 'application/json') finalData = await res.json()\n\t\telse finalData = { rawData: await res.text() }\n\n\t\tthis.debug(\n\t\t\t`${options.method ?? 'GET'} ${url.pathname + url.search} payload=${options.body ? String(options.body) : '{}'}`\n\t\t)\n\n\t\treturn finalData as D\n\t}\n\n\tprotected wsMessageEvent(data: string) {\n\t\tconst wsData = this.snakeToCamel(JSON.parse(data.toString()))\n    this.node!.wsMessageEvent(wsData)\n\t}\n\n\tprotected debug(logs: string) {\n    this.manager!.emit(\n    \tRainlinkEvents.Debug,\n    \t`[Rainlink] / [Node @ ${this.node?.options.name}] / [Driver] / [FrequenC1] | ${logs}`\n    )\n\t}\n\n\tpublic wsClose(): void {\n\t\tif (this.wsClient) this.wsClient.close(1006, 'Self closed')\n\t}\n\n\tpublic async updateSession(sessionId: string, mode: boolean, timeout: number): Promise<void> {\n\t\tconst options: RainlinkRequesterOptions = {\n\t\t\tpath: `/sessions/${sessionId}`,\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\tmethod: 'PATCH',\n\t\t\tdata: {\n\t\t\t\tresuming: mode,\n\t\t\t\ttimeout: timeout,\n\t\t\t},\n\t\t}\n\n\t\tawait this.requester<{ resuming: boolean; timeout: number }>(options)\n\t\tthis.debug(`Session updated! resume: ${mode}, timeout: ${timeout}`)\n\t\treturn\n\t}\n\n\tprotected camelToSnake(obj: Record<string, unknown>): Record<string, unknown> {\n\t\tif (typeof obj !== 'object') return {}\n\t\tif (!obj || JSON.stringify(obj) == '{}') return {}\n\t\tconst allKeys = Object.keys(obj)\n\t\tconst regex = /^([a-z]{1,})(_[a-z0-9]{1,})*$/\n\n\t\tfor (const key of allKeys) {\n\t\t\tlet newKey\n\t\t\tif (!regex.test(key)) {\n\t\t\t\tnewKey = key.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`)\n\t\t\t\tobj[newKey] = obj[key]\n\t\t\t\tdelete obj[key]\n\t\t\t}\n\t\t\tif (newKey && typeof obj[newKey] !== 'object' && typeof obj[key] !== 'object') continue\n\n\t\t\tnewKey\n\t\t\t\t? this.camelToSnake(obj[newKey] as Record<string, unknown>)\n\t\t\t\t: this.camelToSnake(obj[key] as Record<string, unknown>)\n\t\t}\n\t\treturn obj\n\t}\n\n\tprotected snakeToCamel(obj: Record<string, unknown>): Record<string, unknown> {\n\t\tif (typeof obj !== 'object') return {}\n\t\tif (!obj || JSON.stringify(obj) == '{}') return {}\n\t\tconst allKeys = Object.keys(obj)\n\t\tfor (const key of allKeys) {\n\t\t\tlet newKey\n\t\t\tif (/([-_][a-z])/.test(key)) {\n\t\t\t\tnewKey = key\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.replace(/([-_][a-z])/g, (group) => group.toUpperCase().replace('-', '').replace('_', ''))\n\t\t\t\tobj[newKey] = obj[key]\n\t\t\t\tdelete obj[key]\n\t\t\t}\n\t\t\tif (newKey && typeof obj[newKey] !== 'object' && typeof obj[key] !== 'object') continue\n\n\t\t\tnewKey\n\t\t\t\t? this.snakeToCamel(obj[newKey] as Record<string, unknown>)\n\t\t\t\t: this.snakeToCamel(obj[key] as Record<string, unknown>)\n\t\t}\n\t\treturn obj\n\t}\n\n\tprotected decode(base64: string) {\n\t\treturn new Decoder(base64).getTrack ?? undefined\n\t}\n}\n\nclass Decoder extends AbstractDecoder {\n\tprotected position: number = 0\n\tprotected buffer: Buffer\n\tconstructor(protected track: string) {\n\t\tsuper()\n\t\tthis.buffer = Buffer.from(track, 'base64')\n\t}\n\tget getTrack(): RawTrack | null {\n\t\ttry {\n\t\t\t// Read the length of base64 (This will use later)\n\t\t\tthis.readInt()\n\t\t\t// Read the version of base64 (This will use later)\n\t\t\tthis.readByte()\n\t\t\treturn {\n\t\t\t\tencoded: this.track,\n\t\t\t\tinfo: {\n\t\t\t\t\ttitle: this.readUTF(),\n\t\t\t\t\tauthor: this.readUTF(),\n\t\t\t\t\tlength: Number(this.readLong()),\n\t\t\t\t\tidentifier: this.readUTF(),\n\t\t\t\t\tisSeekable: true,\n\t\t\t\t\tisStream: this.readByte() === 1,\n\t\t\t\t\turi: this.readUTF(),\n\t\t\t\t\tartworkUrl: this.readByte() === 1 ? this.readUTF() : null,\n\t\t\t\t\tisrc: this.readByte() === 1 ? this.readUTF() : null,\n\t\t\t\t\tsourceName: this.readUTF().toLowerCase(),\n\t\t\t\t\tposition: 0,\n\t\t\t\t},\n\t\t\t\tpluginInfo: {},\n\t\t\t}\n\t\t} catch {\n\t\t\treturn null\n\t\t}\n\t}\n}\n","import { RainlinkPluginType } from '../Interface/Constants'\nimport { Rainlink } from '../Rainlink'\n\n/** The interface class for another rainlink plugin, extend it to use */\nexport class RainlinkPlugin {\n\tpublic readonly isRainlinkPlugin: boolean = true\n\t/** Name function for getting plugin name */\n\tpublic name(): string {\n\t\tthrow new Error('Plugin must implement name() and return a plguin name string')\n\t}\n\n\t/** Type function for diferent type of plugin */\n\tpublic type(): RainlinkPluginType {\n\t\tthrow new Error('Plugin must implement type() and return \"sourceResolver\" or \"default\"')\n\t}\n\n\t/** Load function for make the plugin working */\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic load(manager: Rainlink): void {\n\t\tthrow new Error('Plugin must implement load()')\n\t}\n\n\t/** unload function for make the plugin stop working */\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic unload(manager: Rainlink): void {\n\t\tthrow new Error('Plugin must implement unload()')\n\t}\n}\n","import { RainlinkSearchOptions, RainlinkSearchResult } from '../Interface/Manager'\nimport { RainlinkPlugin } from './RainlinkPlugin'\n\n/** The interface class for track resolver plugin, extend it to use */\nexport class SourceRainlinkPlugin extends RainlinkPlugin {\n\t/**\n   * sourceName function for source plugin register search engine.\n   * This will make plugin avalible to search when set the source to default source\n   * @returns string\n   */\n\tpublic sourceName(): string {\n\t\tthrow new Error('Source plugin must implement sourceName() and return as string')\n\t}\n\n\t/**\n   * sourceIdentify function for source plugin register search engine.\n   * This will make plugin avalible to search when set the source to default source\n   * @returns string\n   */\n\tpublic sourceIdentify(): string {\n\t\tthrow new Error('Source plugin must implement sourceIdentify() and return as string')\n\t}\n\n\t/**\n   * directSearchChecker function for checking if query have direct search param.\n   * @returns boolean\n   */\n\tpublic directSearchChecker(query: string): boolean {\n\t\tconst directSearchRegex = /directSearch=(.*)/\n\t\tconst isDirectSearch = directSearchRegex.exec(query)\n\t\treturn isDirectSearch == null\n\t}\n\n\t/**\n   * searchDirect function for source plugin search directly without fallback.\n   * This will avoid overlaps in search function\n   * @returns RainlinkSearchResult\n   */\n\tpublic async searchDirect(\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tquery: string,\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\toptions?: RainlinkSearchOptions\n\t): Promise<RainlinkSearchResult> {\n\t\tthrow new Error('Source plugin must implement sourceIdentify() and return as string')\n\t}\n}\n","import { metadata } from './metadata'\nimport Library from './Library'\n\n// Export main class\nexport * from './Rainlink'\n// Export player class\nexport * from './Player/RainlinkPlayer'\nexport * from './Player/RainlinkQueue'\nexport * from './Player/RainlinkTrack'\nexport * from './Player/RainlinkFilter'\nexport * from './Player/RainlinkVoice'\n// Export node class\nexport * from './Node/RainlinkNode'\nexport * from './Node/RainlinkRest'\nexport * from './Node/RainlinkPlayerEvents'\n// Export manager class\nexport * from './Manager/RainlinkNodeManager'\nexport * from './Manager/RainlinkPlayerManager'\n//// Export library class\nexport * from './Library/AbstractLibrary'\nexport { Library }\n//Export interface\nexport * from './Interface/Connection'\nexport * from './Interface/Constants'\nexport * from './Interface/Manager'\nexport * from './Interface/Node'\nexport * from './Interface/Player'\nexport * from './Interface/Rest'\nexport * from './Interface/Track'\nexport * from './Interface/Events'\n// Export plugin\nexport * from './Plugin/RainlinkPlugin'\nexport * from './Plugin/SourceRainlinkPlugin'\n// Export driver\nexport * from './Drivers/AbstractDriver'\nexport * from './Drivers/Lavalink3'\nexport * from './Drivers/Lavalink4'\nexport * from './Drivers/Nodelink2'\n// Export utilities\nexport * from './Utilities/RainlinkDatabase'\nexport * from './Utilities/RainlinkWebsocket'\nexport * from './Utilities/AbstractDecoder'\nexport * from './Utilities/LavalinkDecoder'\n// Export metadata\nexport * from './metadata'\nexport const version = metadata.version\n"],"mappings":"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","names":["RainlinkSearchResultType","EventEmitter","RainlinkEvents","RainlinkConnectState","VoiceState","VoiceConnectState","LavalinkLoadType","RainlinkPluginType","RainlinkPlayerState","RainlinkLoopMode","node","setTimeout","util","EventEmitter","URL","RainlinkWebsocketState","EventEmitter","URL","_a","data","version","util","setTimeout","util","Lavalink3loadType","util","util","Nodelink2loadType","util","util","util","EventEmitter"]}